{"version":3,"sources":["util.js"],"names":[],"mappings":"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","file":"util.js","sourcesContent":["((ReflectionPoll) => {\n    const actionHandler = (state, actions, render, actionName, ...args) => {\n        const handler = actions.get(actionName);\n        if (typeof handler !== 'function') {\n            throw new Error('Unhandled action \"' + actionName + '\"');\n        }\n        args = [state].concat(args);\n        const newState = handler.apply(null, args);\n        render(newState);\n    };\n\n    const escapeHTML = (string) => {\n        const entityMap = {\n            '&': '&amp;',\n            '<': '&lt;',\n            '>': '&gt;',\n            '\"': '&quot;',\n            '\\'': '&#39;',\n            '/': '&#x2F;',\n        };\n\n        string = '' + string;\n        return string.replace(/[&<>\"'\\/]/g, (c) => {\n            return entityMap[c];\n        });\n    };\n\n    const formatDate = (date, format) => {\n        return window.moment(date).format(format);\n    };\n\n    const shallowEqualImmutable = (objA, objB) => {\n        // adapted from https://github.com/jurassix/react-immutable-render-mixin\n        if (objA === objB || Immutable.is(objA, objB)) {\n            return true;\n        }\n\n        if (typeof objA !== 'object' || objA === null ||\n            typeof objB !== 'object' || objB === null) {\n            return false;\n        }\n\n        const keysA = Object.keys(objA);\n        const keysB = Object.keys(objB);\n\n        if (keysA.length !== keysB.length) {\n            return false;\n        }\n\n        // Test for A's keys different from B.\n        const bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n        for (let i = 0; i < keysA.length; i++) {\n            if (!bHasOwnProperty(keysA[i]) || !Immutable.is(objA[keysA[i]], objB[keysA[i]])) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    const ImmutableRenderMixin = {\n        shouldComponentUpdate(nextProps, nextState) {\n            return !shallowEqualImmutable(this.props, nextProps) ||\n                   !shallowEqualImmutable(this.state, nextState);\n        },\n    };\n\n    const sha256 = (text) => {\n        const sha = new jsSHA('SHA-256', 'TEXT', { encoding: 'UTF8' });\n        sha.update(text);\n        return sha.getHash('B64');\n    };\n\n    ReflectionPoll.util = {\n        ImmutableRenderMixin,\n        escapeHTML,\n        formatDate,\n        sha256,\n        uuid: function() { return window.uuid.v4(); },\n        classNames: window.classNames,\n        promisifyAll: Promise.promisifyAll,\n        actionHandler: actionHandler,\n        debounce: (fn, delay) => $.debounce(delay, fn),\n    };\n})(golab.tools.ReflectionPoll);\n"],"sourceRoot":"/source/"}