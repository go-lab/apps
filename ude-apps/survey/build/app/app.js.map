{"version":3,"sources":["app.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["((ReflectionPoll) => {\n    const { util, fetchAggregatedResults } = ReflectionPoll;\n    const ANSWER_CHANGE_ACTION_DELAY = 1000;\n\n    ReflectionPoll.Application =\n        function Application(envHandlers, loadingIndicator, errorDisplay, config) {\n            const pollActionLogger = envHandlers['survey'].actionLogger;\n            const pollStorageHandler = envHandlers['survey'].storageHandler;\n            envHandlers['survey'].metadataHandler.setTargetDisplayName('survey');\n            const pollMetadataHandler = envHandlers['survey'].metadataHandler;\n\n            const answersActionLogger = envHandlers['survey_responses'].actionLogger;\n            const answersStorageHandler = envHandlers['survey_responses'].storageHandler;\n            const answersMetadataHandler = envHandlers['survey_responses'].metadataHandler.setTargetDisplayName('survey_responses');\n\n            /*const pollActionLogger = envHandlers['configuration'].actionLogger;\n             const pollStorageHandler = envHandlers['configuration'].storageHandler;\n             envHandlers['configuration'].metadataHandler.setTargetDisplayName('survey');\n             const pollMetadataHandler = envHandlers['configuration'].metadataHandler;\n\n             const answersActionLogger = envHandlers['survey_responses'].actionLogger;\n             const answersStorageHandler = envHandlers['survey_responses'].storageHandler;\n             envHandlers['survey_responses'].metadataHandler.setTargetDisplayName('survey_responses');\n             const answersMetadataHandler = envHandlers['survey_responses'].metadataHandler;\n             */\n\n            const languageHandler = envHandlers.languageHandler;\n\n            const getMsg = languageHandler.getMessage.bind(languageHandler);\n\n            const pollRepo = ReflectionPoll.PollRepo(pollStorageHandler);\n            const answersRepo = ReflectionPoll.AnswersRepo(answersStorageHandler);\n            const toolbar = ReflectionPoll.Toolbar($('#toolbar'), getMsg, {\n                showLabels: true,\n            });\n            const configView = ReflectionPoll.ConfigView($('#config'), getMsg);\n            const pollView = ReflectionPoll.PollView($('#poll_view')[0], getMsg, config.imgPath);\n            const resultsView = ReflectionPoll.ResultsView($('#results_view')[0], getMsg);\n            const importDialog = ReflectionPoll.ImportDialog(getMsg);\n            const exportDialog = ReflectionPoll.ExportDialog(getMsg);\n            const context = pollMetadataHandler.getContext();\n\n            const logAnswerChange = (function () {\n                let previousAnswers;\n                return function logAnswerChange(poll, answers) {\n                    if (!answers.equals(previousAnswers)) {\n                        answersActionLogger.logChange({\n                            objectType: 'answers',\n                            id: answers.get('id', ReflectionPoll.util.uuid()),\n                            content: answers.toJS(),\n                            pollId: poll.get('id'),\n                            pollContentHash: poll.get('contentHash'),\n                        });\n                    }\n                    previousAnswers = answers;\n                };\n            })();\n\n            if (context === 'ils') {\n                $('#toolbar').hide();\n            }\n\n            translateAppTitle();\n            translatePollDefaults(ReflectionPoll.Poll, getMsg);\n            pollRepo.load().then((poll) => {\n                return answersRepo.load(poll).then((answers) => {\n                    try {\n                        start(poll, answers);\n                    } catch (error) {\n                        handleError(error, getMsg('start_error'));\n                    }\n                }).catch((error) => {\n                    handleError(error, getMsg('load_answers_error'));\n                });\n            }).catch((error) => {\n                handleError(error, getMsg('load_poll_error'));\n            });\n\n            function start(poll, answers) {\n                showPollView(poll, answers);\n                answersActionLogger.logApplicationStarted();\n                loadingIndicator.hide();\n                pollView.onAnswersChange(util.debounce((newAnswers) => {\n                    if (context === 'graasp') return;\n                    if (newAnswers.equals(answers)) return;\n                    answers = newAnswers;\n                    logAnswerChange(poll, answers);\n                    console.log('saveing answers %O', answers.toJS());\n                    answersRepo.save(poll, answers).catch((error) => {\n                        handleError(error, getMsg('save_answers_error'));\n                    });\n                }, ANSWER_CHANGE_ACTION_DELAY));\n\n                toolbar.onActionClick('configure', () => {\n                    showConfigView(poll);\n                });\n                toolbar.onActionClick('view_results', () => {\n                    showResultsView(poll);\n                });\n                toolbar.onActionClick('view_poll', () => {\n                    showPollView(poll, answers);\n                });\n                toolbar.onActionClick('abort', () => {\n                    showPollView(poll, answers);\n                });\n                toolbar.onActionClick('results', () => {\n                    showResultsView(poll);\n                });\n\n                toolbar.onActionClick('download', () => {\n                    downloadCSVFile(poll);\n                });\n\n                toolbar.onActionClick('save', () => {\n                    loadingIndicator.show();\n                    let newPoll = configView.getPoll();\n                    newPoll = ReflectionPoll.Poll.setContentHash(newPoll);\n                    if (newPoll.get('contentHash') === poll.get('contentHash')) {\n                        return showPollView(poll, answers);\n                    }\n                    poll = newPoll;\n                    console.log('saving poll %O', poll.toJS());\n                    savePoll(poll).then(() => {\n                        pollActionLogger.logChange({\n                            objectType: 'poll',\n                            id: poll.get('id'),\n                            content: poll.toJS(),\n                        });\n                        return answersRepo.load(poll);\n                    }).then((newAnswers) => {\n                        answers = newAnswers;\n                        showPollView(poll, answers);\n                    });\n                });\n                toolbar.onActionClick('export', () => {\n                    exportDialog.show(\n                        JSON.stringify(configView.getPoll().toJS())\n                    );\n                });\n                toolbar.onActionClick('import', () => {\n                    importDialog.show();\n                });\n                importDialog.onImport((pollDataString) => {\n                    let referencePoll =\n                        ReflectionPoll.Poll.newPoll().set('id', poll.get('id'));\n                    let conversion = ReflectionPoll.PollImporter.convert(\n                        pollDataString,\n                        referencePoll\n                    );\n                    if (conversion.get('error')) {\n                        showConversionError(conversion.get('error'));\n                        return showConfigView(poll);\n                    } else if (conversion.get('isDowngrade')) {\n                        showConversionError('downgrade');\n                    } else {\n                        errorDisplay.hide();\n                    }\n                    showConfigView(conversion.get('poll'));\n                });\n            }\n\n            function showPollView(poll, answers) {\n                try {\n                    loadingIndicator.hide();\n                    toolbar.showPollViewTools();\n                    pollView.render(poll, answers);\n                    configView.hide();\n                    resultsView.hide();\n                    pollView.show();\n                } catch (error) {\n                    handleError(error, getMsg('show_poll_error'));\n                }\n            }\n\n            function showConfigView(poll) {\n                try {\n                    loadingIndicator.hide();\n                    toolbar.showConfigTools();\n                    configView.render(poll);\n                    pollView.hide();\n                    resultsView.hide();\n                    configView.show();\n                } catch (error) {\n                    handleError(error, getMsg('show_config_error'));\n                }\n            }\n\n            function showResultsView(poll) {\n                loadingIndicator.show();\n                try {\n                    fetchAggregatedResults(poll).then((results) => {\n                        loadingIndicator.hide();\n                        toolbar.showResultsViewTools();\n                        resultsView.render(poll, results, getMsg);\n                        pollView.hide();\n                        configView.hide();\n                        resultsView.show();\n                    }).catch((error) => {\n                        handleError(error, getMsg('show_results_error'));\n                    });\n                } catch (error) {\n                    handleError(error, getMsg('show_results_error'));\n                }\n            }\n\n            function downloadCSVFile(poll) {\n                loadingIndicator.show();\n                try {\n                    window.alert(\"download CSV\");\n                    fetchAggregatedResults(poll).then((results) => {\n                        loadingIndicator.hide();\n                        toolbar.showResultsViewTools();\n                        resultsView.render(poll, results, getMsg);\n                        pollView.hide();\n                        configView.hide();\n                        resultsView.show();\n                    }).catch((error) => {\n                        handleError(error, getMsg('show_results_error'));\n                    });\n                } catch (error) {\n                    handleError(error, getMsg('show_results_error'));\n                }\n            }\n\n\n            function showConversionError(error) {\n                errorDisplay.show(getMsg('conversion_error_' + error));\n            }\n\n            function savePoll(poll) {\n                return pollRepo.save(poll).catch(function (error) {\n                    handleError(error, getMsg('save_poll_error'));\n                });\n            }\n\n            function translateAppTitle() {\n                $('h1, title').text(getMsg('survey_app'));\n            }\n\n            function handleError(error, userMessage) {\n                userMessage = userMessage || getMsg('error_occured');\n                errorDisplay.show(userMessage);\n                console.error(error.stack);\n                if (error.details) {\n                    console.error('Details: %O', error.details);\n                }\n                loadingIndicator.hide();\n            }\n        };\n\n    function translatePollDefaults(pollModule, getMsg) {\n        pollModule.defaultQuestion = getMsg('new_question');\n        pollModule.defaultAnswerText = getMsg('answer');\n        pollModule.defaultPollHeading = getMsg('new_poll');\n    }\n})(golab.tools.ReflectionPoll);\n"],"sourceRoot":"/source/"}