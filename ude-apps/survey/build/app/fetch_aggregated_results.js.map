{"version":3,"sources":["fetch_aggregated_results.js"],"names":[],"mappings":";;AAAA,CAAC,UAAC,cAAc,EAAK;AACjB,QAAM,UAAU,GAAG,SAAb,UAAU,CAAI,MAAM,EAAE,IAAI,EAAK;AACjC,cAAM,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC;AACpC,YAAI,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC;AAChC,eAAO,+DAA+D,iBACtD,MAAM,yBAAoB,IAAI,CAAE,CAAC;KACpD,CAAC;;AAEF,kBAAc,CAAC,sBAAsB,GAAG,UAAS,IAAI,EAAE;AACnD,eAAO,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAChE,IAAI,CAAC,iBAAiB,CAAC,CACvB,IAAI,CAAC,UAAC,QAAQ,EAAK;AAChB,mBAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;SAC1B,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO,EAAK;AACjB,mBAAO,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SACpC,CAAC,CAAC;KACN,CAAC;;AAEF,aAAS,iBAAiB,CAAC,QAAQ,EAAE;AACjC,YAAI,QAAQ,CAAC,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,MAAM,GAAG,GAAG,EAAE;AACjD,mBAAO,QAAQ,CAAC;SACnB;AACD,YAAM,KAAK,GAAG,IAAI,KAAK,4CACsB,QAAQ,CAAC,UAAU,OAC/D,CAAC;AACF,eAAO,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,IAAI,EAAK;AAClC,iBAAK,CAAC,OAAO,GAAG,IAAI,CAAC;AACrB,kBAAM,KAAK,CAAC;SACf,CAAC,CAAC;KACN;CACJ,CAAA,CAAE,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC","file":"fetch_aggregated_results.js","sourcesContent":["((ReflectionPoll) => {\n    const serviceUrl = (pollId, hash) => {\n        pollId = encodeURIComponent(pollId);\n        hash = encodeURIComponent(hash);\n        return 'http://golab.collide.info/analytics/reflection_poll_responses' +\n             `?pollId=${pollId}&pollContentHash=${hash}`;\n    };\n\n    ReflectionPoll.fetchAggregatedResults = function(poll) {\n        return fetch(serviceUrl(poll.get('id'), poll.get('contentHash')))\n        .then(throwOnErrorState)\n        .then((response) => {\n            return response.json();\n        }).then((results) => {\n            return Immutable.fromJS(results);\n        });\n    };\n\n    function throwOnErrorState(response) {\n        if (response.status >= 200 && response.status < 300) {\n            return response;\n        }\n        const error = new Error(\n            `Failed response request. HTTP status: ${response.statusText}.`\n        );\n        return response.json().then((body) => {\n            error.details = body;\n            throw error;\n        });\n    }\n})(golab.tools.ReflectionPoll);\n"],"sourceRoot":"/source/"}