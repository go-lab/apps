{"version":3,"sources":["view/timeaxis.js"],"names":[],"mappings":";;AAAA,CAAC,UAAC,kBAAkB,EAAK;iBACc,KAAK;QAAhC,SAAS,UAAT,SAAS;QAAE,WAAW,UAAX,WAAW;QACtB,WAAW,GAAK,kBAAkB,CAAC,IAAI,CAAvC,WAAW;;AAEnB,QAAM,QAAQ,GAAG,WAAW,CAAC;AACzB,mBAAW,EAAE,UAAU;AACvB,iBAAS,EAAE;AACP,iBAAK,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU;AAChC,iBAAK,EAAE,SAAS,CAAC,MAAM;SAC1B;AACD,6BAAqB,EAAA,+BAAC,SAAS,EAAE;AAC7B,mBAAO,EACH,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,IACpC,WAAW,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA,AACjD,CAAC;SACL;AACD,cAAM,EAAA,kBAAG;AACL,mBACI;AACI,qBAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,GAAG,AAAC;AAC/B,sBAAM,EAAC,IAAI;AACX,mBAAG,EAAC,MAAM;AACV,kBAAE,EAAC,UAAU,GACX,CACR;SACL;AACD,cAAM,EAAA,kBAAG;AACL,gBAAM,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACtC,gBAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC/C,eAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAClB;AACD,yBAAiB,EAAA,6BAAG;AAChB,gBAAI,CAAC,IAAI,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC3D,gBAAI,CAAC,MAAM,EAAE,CAAC;SACjB;AACD,0BAAkB,EAAA,8BAAG;AACjB,gBAAI,CAAC,MAAM,EAAE,CAAC;SACjB;KACJ,CAAC,CAAC;;AAEH,sBAAkB,CAAC,QAAQ,GAAG,QAAQ,CAAC;CAC1C,CAAA,CAAE,KAAK,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC","file":"view/timeaxis.js","sourcesContent":["((activityStatistics) => {\n    const { PropTypes, createClass } = React;\n    const { scaleEquals } = activityStatistics.util;\n\n    const Timeaxis = createClass({\n        displayName: 'Timeaxis',\n        propTypes: {\n            scale: PropTypes.func.isRequired,\n            width: PropTypes.number\n        },\n        shouldComponentUpdate(nextProps) {\n            return !(\n                nextProps.width !== this.props.width &&\n                scaleEquals(nextProps.scale, this.props.scale)\n            );\n        },\n        render() {\n            return (\n                <svg\n                    width={this.props.width || 100}\n                    height='30'\n                    ref='axis'\n                    id='timeaxis'>\n                </svg>\n            );\n        },\n        update() {\n            const svg = d3.select(this.refs.axis);\n            const axis = this.axis.scale(this.props.scale);\n            svg.call(axis);\n        },\n        componentDidMount() {\n            this.axis = d3.svg.axis().tickSize(10, 1).orient('bottom');\n            this.update();\n        },\n        componentDidUpdate() {\n            this.update();\n        },\n    });\n\n    activityStatistics.Timeaxis = Timeaxis;\n})(golab.tools.activityStatistics);\n"],"sourceRoot":"/source/"}