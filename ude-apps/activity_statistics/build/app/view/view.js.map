{"version":3,"sources":["view/view.js"],"names":[],"mappings":"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","file":"view/view.js","sourcesContent":["((activityStatistics) => {\n    const {\n        util,\n        TimelineControls,\n        TimelineStatus,\n        Legend,\n        Timeaxis,\n        Timeslider,\n        TimeMarker,\n        LaneList,\n        Button\n    } = activityStatistics;\n\n    const mapTime = R.map((d) => d.getTime());\n\n    const extractTimestamps = (lane) => {\n        const activityTimes = R.map((activity) => {\n            return activity.timestamp;\n        }, lane.get('rawAppActivities'));\n        const phaseTimes = R.map((activity) => {\n            return [activity.start, activity.end];\n        }, lane.get('rawPhaseActivities'));\n        return R.flatten(phaseTimes).concat(activityTimes);\n    };\n\n    const min = R.reduce(R.min, Infinity);\n    const max = R.reduce(R.max, -Infinity);\n\n    const getActivityTimeRange = (lanes) => {\n        const timestamps = R.pipe(\n            R.map(extractTimestamps),\n            (t) => t.toJS(),\n            R.flatten,\n            mapTime\n        )(lanes);\n\n        return {\n            min: new Date(min(timestamps)),\n            max: new Date(max(timestamps))\n        };\n    };\n\n    const withDefaults = (sourceMap, defaults) => {\n        return sourceMap.map((val, key) => {\n            return R.defaultTo(defaults[key], val);\n        });\n    };\n\n    const View = React.createClass({\n        displayName: 'View',\n        render() {\n            const dimensions = this.props.state.get('dimensions');\n            const laneConfigs = this.props.state.get('projectedLanes');\n            if (laneConfigs.count() === 0) {\n                return <div className='cover' id='loading_indicator'></div>;\n            }\n            const scales = this.getScales(laneConfigs);\n            return (\n                <div>\n                    {this.renderStatusBar(laneConfigs, scales)}\n                    <div className='lanes'>\n                        <h4 className='sr-only'>{this.props.getMsg('timelines')}</h4>\n                        <TimeMarker\n                            x={this.props.state.get('timeMarkerX')}\n                            offset={dimensions.get('menuWidth')}\n                        />\n                        <LaneList\n                            action={this.props.action}\n                            configs={laneConfigs}\n                            timeScale={scales.selectedTime}\n                            appTypeScale={scales.appType}\n                            phaseTypeScale={scales.phaseType}\n                            menuWidth={dimensions.get('menuWidth')}\n                            laneWidth={dimensions.get('laneWidth')}\n                            timelineWidth={dimensions.get('timelineWidth')}\n                            lanesHeight={dimensions.get('lanesHeight')}\n                            highlightedPhase={this.props.state.get('highlightedPhase')}\n                            highlightedApp={this.props.state.get('highlightedApp')}\n                            showAppActivities={this.props.state.get('showAppActivities')}\n                            getMsg={this.props.getMsg}\n                        />\n                    </div>\n                    <div\n                        ref='bottom'\n                        style={{ marginLeft: dimensions.get('menuWidth') }}>\n                        <Timeaxis\n                            scale={scales.selectedTime}\n                            width={dimensions.get('timelineWidth')}\n                        />\n                        <Timeslider\n                            selectedScale={scales.selectedTime}\n                            fullScale={scales.fullTime}\n                            width={dimensions.get('timelineWidth')}\n                            action={this.props.action}\n                        />\n                    </div>\n                </div>\n            );\n        },\n        renderStatusBar(laneConfigs, scales) {\n            const allLanesMaximized = laneConfigs.every(l => !l.get('minimized'));\n            const minimized = this.props.state.get('statusBarMinimized');\n            return (\n                <div ref='top' className={`top ${minimized ? 'minimized' : ''}`}>\n                    <div id='toggle_status_visibility'>\n                        <Button\n                            onClick={this.toggleStatusVisibility}\n                            glyphicon={`chevron-${minimized ? 'down' : 'up'}`}\n                            screenReaderOnlyLabel={true}\n                            label={\n                                minimized ?\n                                    this.props.getMsg('show_statusbar') :\n                                    this.props.getMsg('hide_statusbar')\n                            }\n                        />\n                    </div>\n                    <div>\n                        <h4>{this.props.getMsg('view_controls')}</h4>\n                        <TimelineControls\n                            getMsg={this.props.getMsg}\n                            action={this.props.action}\n                            allLanesShowApps={this.props.state.get('showAppActivities')}\n                            allLanesMaximized={allLanesMaximized}\n                            availableDays={this.props.state.get('availableDays')}\n                            selectedDay={this.props.state.get('selectedDay')}\n                        />\n                    </div>\n                    <div>\n                        <h4>{this.props.getMsg('phases')}</h4>\n                        <Legend\n                            scale={scales.phaseType}\n                            highlightedItem={this.props.state.get('highlightedPhase')}\n                            highlightAction={R.partial(this.props.action, 'highlight_phase')}\n                            dehighlightAction={R.partial(this.props.action, 'dehighlight_phase')}\n                        />\n                    </div>\n                    <div>\n                        <h4>{this.props.getMsg('apps')}</h4>\n                        <Legend\n                            scale={scales.appType}\n                            shape='triangle-up'\n                            highlightedItem={this.props.state.get('highlightedApp')}\n                            highlightAction={R.partial(this.props.action, 'highlight_app')}\n                            dehighlightAction={R.partial(this.props.action, 'dehighlight_app')}\n                        />\n                    </div>\n                    <div className='timeline_status'>\n                        <h4>{this.props.getMsg('info')}</h4>\n                        <TimelineStatus\n                            getMsg={this.props.getMsg}\n                            activityInFocus={this.props.state.get('activityInFocus')}\n                            selectedTimeScale={scales.selectedTime}\n                            fullTimeScale={scales.fullTime}\n                            connectionStatus={this.props.state.get('connectionStatus')}\n                        />\n                    </div>\n                </div>\n            );\n        },\n        componentDidUpdate() {\n            this.checkDimensions();\n        },\n        getScales(lanes) {\n            const width = this.props.state.getIn(['dimensions', 'timelineWidth']);\n            const { min: minDate, max: maxDate } = getActivityTimeRange(lanes);\n            const { min: selectedMinDate, max: selectedMaxDate } = withDefaults(\n                this.props.state.get('selectedTimeRange'),\n                { min: minDate, max: maxDate }\n            ).toJS();\n            const fullTime = d3.time.scale()\n            .domain([minDate, maxDate])\n            .range([0, width]);\n            const selectedTime = d3.time.scale()\n            .domain([selectedMinDate, selectedMaxDate])\n            .range([0, width]);\n            const phaseType = this.getPhaseTypeScale();\n            const appType = this.getAppTypeScale();\n            return { fullTime, selectedTime, phaseType, appType };\n        },\n        getPhaseTypeScale() {\n            return d3.scale.ordinal()\n                .range(util.colorBrewer.paired)\n                .domain(this.props.state.get('phases').toArray());\n        },\n        getAppTypeScale() {\n            return d3.scale.ordinal()\n                .range(util.colorBrewer.set3)\n                .domain(this.props.state.get('apps').toArray());\n        },\n        checkDimensions() {\n            const dimensions = this.props.state.get('dimensions');\n            if (this.refs.top) {\n                const topHeight = this.refs.top.clientHeight;\n                if (dimensions.get('topHeight') !== topHeight) {\n                    this.props.action('set_top_height', topHeight);\n                }\n            }\n            if (this.refs.bottom) {\n                const bottomHeight = this.refs.bottom.clientHeight;\n                if (dimensions.get('bottomHeight') !== bottomHeight) {\n                    this.props.action('set_bottom_height', bottomHeight);\n                }\n            }\n        },\n        toggleStatusVisibility() {\n            if (this.props.state.get('statusBarMinimized')) {\n                this.props.action('maximize_status_bar');\n            } else {\n                this.props.action('minimize_status_bar');\n            }\n        },\n    });\n\n    activityStatistics.View = View;\n})(golab.tools.activityStatistics);\n"],"sourceRoot":"/source/"}