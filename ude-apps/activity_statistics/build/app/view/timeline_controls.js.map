{"version":3,"sources":["view/timeline_controls.js"],"names":[],"mappings":"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","file":"view/timeline_controls.js","sourcesContent":["((activityStatistics) => {\n    const { PropTypes, createClass } = React;\n    const { Button } = activityStatistics;\n\n    const DaySeletor = createClass({\n        displayName: 'DaySeletor',\n        propTypes: {\n            getMsg: PropTypes.func.isRequired,\n            availableDays: PropTypes.object.isRequired,\n            selectedDay: PropTypes.object.isRequired,\n            onSelectedDayChange: PropTypes.func.isRequired,\n        },\n        render() {\n            const dayOptions = this.props.availableDays.map((day) => (\n                <option\n                    key={day.getTime()}\n                    value={day.getTime()}>\n                    {moment(day).format('LL')}\n                </option>\n            )).toArray();\n\n            return (\n                <div className='form-group day_selection'>\n                    <label htmlFor='day_selector'>{this.props.getMsg('show_data_from')}</label>\n                    <select\n                        className='form-control input-sm'\n                        id='day_selector'\n                        onChange={this.props.onSelectedDayChange}\n                        value={this.props.selectedDay.getTime()}>\n                        {dayOptions}\n                    </select>\n                </div>\n            );\n        },\n    });\n\n    const TimelineControls = createClass({\n        displayName: 'TimelineControls',\n        propTypes: {\n            action: PropTypes.func.isRequired,\n            getMsg: PropTypes.func.isRequired,\n            allLanesShowApps: PropTypes.bool.isRequired,\n            allLanesMaximized: PropTypes.bool.isRequired,\n            availableDays: PropTypes.object.isRequired,\n            selectedDay: PropTypes.object.isRequired,\n        },\n        shouldComponentUpdate(nextProps) {\n            return !(\n                nextProps.allLanesShowApps === this.props.allLanesShowApps &&\n                nextProps.allLanesMaximized === this.props.allLanesMaximized &&\n                nextProps.availableDays.equals(this.props.availableDays) &&\n                R.propEq('selectedDay', nextProps, this.props)\n            );\n        },\n        render() {\n            const { availableDays, selectedDay, getMsg } = this.props;\n            return (\n                <div className='timeline_controls'>\n                    {this.renderToggleAppsBtn()}\n                    {this.renderMinimizeLanesBtn()}\n                    <DaySeletor\n                        getMsg={getMsg}\n                        availableDays={availableDays}\n                        selectedDay={selectedDay}\n                        onSelectedDayChange={this.onSelectedDayChange}\n                    />\n                </div>\n            );\n        },\n        renderToggleAppsBtn() {\n            const btnClass = classNames(this.baseBtnClass, {\n                'active': this.props.allLanesShowApps,\n            });\n            return (\n                <Button\n                    active={this.props.allLanesShowApps}\n                    onClick={this.onShowAppsClick}\n                    glyphicon='text-background'\n                    label={this.props.getMsg('show_app_activities')}\n                />\n            );\n        },\n        renderMinimizeLanesBtn() {\n            const {Â getMsg, allLanesMaximized } = this.props;\n            let label = getMsg('maximize_timelines');\n            let glyphicon = 'eye-close';\n            if (allLanesMaximized) {\n                label = getMsg('minimize_timelines');\n                glyphicon = 'eye-open';\n            }\n            return (\n                <Button\n                    active={true}\n                    onClick={this.onToggleMinimizationClick}\n                    glyphicon={glyphicon}\n                    label={label}\n                />\n            );\n        },\n        onSelectedDayChange(event) {\n            this.props.action('set_selected_day', new Date(parseInt(event.target.value, 10)));\n        },\n        onShowAppsClick() {\n            this.props.action('set_show_app_activities', !this.props.allLanesShowApps);\n        },\n        onToggleMinimizationClick() {\n            if (this.props.allLanesMaximized) {\n                this.props.action('minimize_all_lanes');\n            } else {\n                this.props.action('maximize_all_lanes');\n            }\n        },\n        baseBtnClass: classNames({\n            'btn': true,\n            'btn-flat': true,\n        })\n    });\n\n    activityStatistics.TimelineControls = TimelineControls;\n})(golab.tools.activityStatistics);\n"],"sourceRoot":"/source/"}