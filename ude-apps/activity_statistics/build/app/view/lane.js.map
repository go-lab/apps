{"version":3,"sources":["view/lane.js"],"names":[],"mappings":"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","file":"view/lane.js","sourcesContent":["((activityStatistics) => {\n    const { PropTypes, createClass } = React;\n    const { LaneControls, util } = activityStatistics;\n    const { scaleEquals } = util;\n    const highlight = (color) => util.blendColors(color, '#FFFFFF', 0.4);\n    const blendOut  = (color) => util.blendColors(color, '#FFFFFF', 0.8);\n\n    const LaneList = React.createClass({\n        displayName: 'LaneList',\n        propTypes: {\n            action: PropTypes.func.isRequired,\n            getMsg: PropTypes.func.isRequired,\n            configs: PropTypes.instanceOf(Immutable.List),\n            timeScale: PropTypes.func.isRequired,\n            appTypeScale: PropTypes.func.isRequired,\n            phaseTypeScale: PropTypes.func.isRequired,\n            menuWidth: PropTypes.number.isRequired,\n            timelineWidth: PropTypes.number.isRequired,\n            lanesHeight: PropTypes.number.isRequired,\n            laneWidth: PropTypes.number.isRequired,\n            showAppActivities: PropTypes.bool.isRequired,\n            highlightedPhase: PropTypes.string.isRequired,\n            highlightedApp: PropTypes.string.isRequired,\n        },\n        shouldComponentUpdate(nextProps) {\n            return !(\n                scaleEquals(nextProps.timeScale, this.props.timeScale) &&\n                scaleEquals(nextProps.appTypeScale, this.props.appTypeScale) &&\n                scaleEquals(nextProps.phaseTypeScale, this.props.phaseTypeScale) &&\n                nextProps.menuWidth === this.props.menuWidth &&\n                nextProps.timelineWidth === this.props.timelineWidth &&\n                nextProps.lanesHeight === this.props.lanesHeight &&\n                nextProps.laneWidth === this.props.laneWidth &&\n                nextProps.highlightedPhase === this.props.highlightedPhase &&\n                nextProps.highlightedApp === this.props.highlightedApp &&\n                nextProps.showAppActivities === this.props.showAppActivities &&\n                nextProps.configs.equals(this.props.configs)\n            );\n        },\n        render() {\n            const lanes = this.props.configs.map((config) => {\n                return (\n                    <Lane\n                        action={this.props.action}\n                        config={config}\n                        timeScale={this.props.timeScale}\n                        appTypeScale={this.props.appTypeScale}\n                        phaseTypeScale={this.props.phaseTypeScale}\n                        menuWidth={this.props.menuWidth}\n                        laneWidth={this.props.laneWidth}\n                        timelineWidth={this.props.timelineWidth}\n                        getMsg={this.props.getMsg}\n                        highlightedPhase={this.props.highlightedPhase}\n                        showAppActivities={this.props.showAppActivities}\n                        highlightedApp={this.props.highlightedApp}\n                        key={config.get('username')} />\n                );\n            });\n            return (\n                <ul style={{ maxHeight: this.props.lanesHeight }}>\n                    {lanes}\n                </ul>\n            );\n        },\n    });\n\n    const Lane = createClass({\n        displayName: 'Lane',\n        propTypes: {\n            action: PropTypes.func.isRequired,\n            getMsg: PropTypes.func.isRequired,\n            config: PropTypes.instanceOf(Immutable.Map),\n            timeScale: PropTypes.func.isRequired,\n            appTypeScale: PropTypes.func.isRequired,\n            phaseTypeScale: PropTypes.func.isRequired,\n            menuWidth: PropTypes.number.isRequired,\n            timelineWidth: PropTypes.number.isRequired,\n            laneWidth: PropTypes.number.isRequired,\n            showAppActivities: PropTypes.bool.isRequired,\n            highlightedPhase: PropTypes.string.isRequired,\n            highlightedApp: PropTypes.string.isRequired,\n        },\n        shouldComponentUpdate(nextProps) {\n            return !(\n                scaleEquals(nextProps.timeScale, this.props.timeScale) &&\n                scaleEquals(nextProps.appTypeScale, this.props.appTypeScale) &&\n                scaleEquals(nextProps.phaseTypeScale, this.props.phaseTypeScale) &&\n                nextProps.menuWidth === this.props.menuWidth &&\n                nextProps.timelineWidth === this.props.timelineWidth &&\n                nextProps.laneWidth === this.props.laneWidth &&\n                nextProps.highlightedPhase === this.props.highlightedPhase &&\n                nextProps.highlightedApp === this.props.highlightedApp &&\n                nextProps.showAppActivities === this.props.showAppActivities &&\n                nextProps.config.equals(this.props.config)\n            );\n        },\n        render() {\n            const {\n                config,\n                action,\n                laneWidth,\n                menuWidth,\n                timelineWidth\n            } = this.props;\n            const dimensions = this.getActivityDimensions();\n            const timelineBorder = 1;\n            let timeline = null;\n            if (!config.get('minimized')) {\n                timeline = (\n                    <svg\n                        onMouseMove={this.onTimelineMouseMove}\n                        onMouseOut={this.onTimelineMouseOut}\n                        ref='timeline'\n                        width={timelineWidth - timelineBorder}>\n                        <g className='phases'></g>\n                        <g className='apps'></g>\n                    </svg>\n                );\n            }\n            return (\n                <li\n                    className='lane'\n                    style={{ width: laneWidth, height: dimensions.totalHeight }}>\n                    <div\n                        className='menu'\n                        style={{ width: menuWidth }}>\n                        <LaneControls\n                            isMinimized={config.get('minimized')}\n                            getMsg={this.props.getMsg}\n                            username={config.get('username')}\n                            action={action}\n                        />\n                        <h3>{config.get('username')}</h3>\n                    </div>\n                    <div className='timeline'>\n                        {timeline}\n                    </div>\n                </li>\n            );\n        },\n        onTimelineMouseMove(event) {\n            const { left } = this.refs.timeline.getBoundingClientRect();\n            this.props.action('set_marker_position', event.clientX - left);\n        },\n        onTimelineMouseOut() {\n            this.props.action('set_marker_position', null);\n        },\n        componentDidMount() {\n            this.updateTimeline();\n        },\n        componentDidUpdate() {\n            this.updateTimeline();\n        },\n        updateTimeline() {\n            const {\n                config,\n                timeScale,\n                phaseTypeScale,\n                appTypeScale,\n                action,\n                highlightedPhase,\n                highlightedApp,\n                showAppActivities,\n            } = this.props;\n\n            if (config.get('minimized')) {\n                return;\n            }\n\n            const svg = d3.select(this.refs.timeline);\n            const phaseActivities = config.get('rawPhaseActivities');\n            const appActivities = config.get('rawAppActivities');\n            const phases =\n              svg.select('.phases').selectAll('rect').data(phaseActivities);\n            const apps =\n              svg.select('.apps').selectAll('path').data(appActivities);\n\n            const { phaseHeight, appHeight } = this.getActivityDimensions();\n\n            // phases\n            phases\n            .enter()\n            .append('rect')\n            .attr('y', 0)\n            .attr('tabindex', 0)\n            .attr('fill', d => phaseTypeScale(d.phase))\n            .attr('aria-describedby', 'info');\n\n            phases\n            .classed('highlight', this.shouldHighlightPhase)\n            .transition()\n            .duration(125)\n            .attr('x', d => timeScale(d.start))\n            .attr('width', d => timeScale(d.end) - timeScale(d.start))\n            .attr('height', phaseHeight)\n            .attr('fill', (d) => {\n                const color = phaseTypeScale(d.phase);\n                if (d.focussed) return highlight(color);\n                if (this.shouldBlendOutPhase(d)) return blendOut(color);\n                return color;\n            });\n\n            // apps\n            if (showAppActivities) {\n                apps\n                .enter()\n                .append('path')\n                .attr('d', d3.svg.symbol().type('triangle-up').size(\n                    util.math.equiTri.areaFromHeight(appHeight))\n                )\n                .attr('transform', 'translate(0 0)')\n                .attr('tabindex', 0)\n                .attr('aria-describedby', 'info');\n\n                apps\n                .classed('highlight', this.shouldHighlightApp)\n                .transition()\n                .duration(125)\n                .attr('transform', d => (\n                    `translate(${timeScale(d.timestamp)} ${phaseHeight + appHeight / 2})`\n                ))\n                .attr('fill', (d) => {\n                    const color = appTypeScale(d.targetname);\n                    if (d.focussed) return highlight(color);\n                    if (this.shouldBlendOutApp(d)) return blendOut(color);\n                    return color;\n                });\n\n                svg.select('.apps').transition().style('opacity', 1);\n            } else {\n                svg.select('.apps').transition().style('opacity', 0);\n            }\n\n            this.setFocusHandlers(\n                phases, this.focusActivity('phase'), this.unfocusActivity('phase')\n            );\n            this.setFocusHandlers(\n                apps, this.focusActivity('app'), this.unfocusActivity('app')\n            );\n        },\n        setFocusHandlers(selection, focus, unfocus) {\n            selection.on('focus', focus);\n            selection.on('mouseover', focus);\n            selection.on('mouseout', unfocus);\n            selection.on('blur', unfocus);\n        },\n        focusActivity(type) {\n            return (d) => this.props.action(\n              `focus_${type}_activity`, this.props.config.get('username'), d\n            );\n        },\n        unfocusActivity(type, d) {\n            return (d) => this.props.action(\n              `unfocus_${type}_activity`, this.props.config.get('username'), d\n            );\n        },\n        shouldHighlightPhase(phaseActivity) {\n            return (\n                phaseActivity.focussed || (\n                    this.props.highlightedApp === '' &&\n                    phaseActivity.phase === this.props.highlightedPhase\n                )\n            );\n        },\n        shouldHighlightApp(appActivity) {\n            return (\n                appActivity.focussed || (\n                    this.props.highlightedPhase === '' &&\n                    appActivity.targetname === this.props.highlightedApp\n                )\n            );\n        },\n        shouldBlendOutPhase(phaseActivity) {\n            return (\n                this.props.highlightedApp !== '' || (\n                    this.props.highlightedPhase !== '' &&\n                    phaseActivity.phase !== this.props.highlightedPhase\n                )\n            );\n        },\n        shouldBlendOutApp(appActivity) {\n            return (\n                this.props.highlightedPhase !== '' || (\n                    this.props.highlightedApp !== '' &&\n                    appActivity.phase !== this.props.highlightedApp\n                )\n            );\n        },\n        getActivityDimensions() {\n            let phaseHeight = 25;\n            let appHeight = 0;\n            if (!this.props.config.get('minimized') && this.props.showAppActivities) {\n                phaseHeight = 50;\n                appHeight = phaseHeight * 1/3;\n                phaseHeight *= 2 / 3;\n            }\n            return {\n                totalHeight: appHeight + phaseHeight,\n                phaseHeight,\n                appHeight,\n            };\n        },\n    });\n\n    activityStatistics.LaneList = LaneList;\n})(golab.tools.activityStatistics);\n"],"sourceRoot":"/source/"}