{"version":3,"sources":["view/timeline_status.js"],"names":[],"mappings":"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","file":"view/timeline_status.js","sourcesContent":["((activityStatistics) => {\n    const { util, State } = activityStatistics;\n    const { scaleEquals } = util;\n    const { PropTypes, createClass } = React;\n    const ONE_MINUTE = 60 * 1000;\n    const ONE_DAY = 24 * 60 * ONE_MINUTE;\n    const ONE_YEAR = 365 * ONE_DAY;\n    const timeFormatter = ({ start, end }) => {\n        const duration = end - start;\n        let formatString = 'LT';\n        if (duration > ONE_YEAR) {\n            formatString = 'LLLL';\n        } else if (duration > ONE_DAY) {\n            formatString = 'dddd, MMMM Do LT';\n        }\n        return (time) => moment(time).format(formatString);\n    };\n    const maybeGet = (map, prop) => {\n        if (map === undefined || map === null) {\n            return undefined;\n        }\n        return map.get(prop);\n    };\n\n    const TimelineStatus = createClass({\n        displayName: 'TimelineStatus',\n        propTypes: {\n            activityInFocus: PropTypes.instanceOf(Immutable.Map),\n            selectedTimeScale: PropTypes.func.isRequired,\n            fullTimeScale: PropTypes.func.isRequired,\n            connectionStatus: PropTypes.number.isRequired,\n            getMsg: PropTypes.func.isRequired,\n        },\n        shouldComponentUpdate(nextProps) {\n            const activityInFocus = this.props.activityInFocus;\n            const nextActivityInFocus = nextProps.activityInFocus;\n            return !(\n                scaleEquals(nextProps.selectedTimeScale, this.props.selectedTimeScale) &&\n                scaleEquals(nextProps.fullTimeScale, this.props.fullTimeScale) &&\n                R.equals(nextProps.connectionStatus, this.props.connectionStatus) &&\n                R.equals(activityInFocus, nextActivityInFocus) &&\n                R.equals(\n                    maybeGet(activityInFocus, 'data'),\n                    maybeGet(nextActivityInFocus, 'data')\n                )\n            );\n        },\n        render() {\n            const activity = this.props.activityInFocus;\n            let status;\n            if (!activity) {\n                status = this.renderTimeScaleInfo();\n            } else {\n                if (activity.get('type') === 'phase') {\n                    status = this.renderPhaseInfo();\n                } else {\n                    status = this.renderAppInfo();\n                }\n            }\n            return (\n                <div>\n                    {this.renderMessage()}\n                    <div id='info'>{status}</div>\n                </div>\n            );\n        },\n        renderMessage() {\n            if (this.props.connectionStatus !== State.CONN_CLOSED) {\n                return undefined;\n            }\n            return (\n                <div>\n                    <p className='text-danger'>\n                        {this.props.getMsg('connection_closed')}\n                    </p>\n                </div>\n            );\n        },\n        renderTimeScaleInfo() {\n            const [start, end] = this.props.fullTimeScale.domain();\n            const [selectedStart, selectedEnd] = this.props.selectedTimeScale.domain();\n            const format = timeFormatter({ start, end });\n\n            return (\n                <span>\n                    {this.props.getMsg('timescale_status', format(selectedStart), format(selectedEnd))}\n                </span>\n            );\n        },\n        renderPhaseInfo() {\n            const data = this.props.activityInFocus.get('data');\n            return (\n                <span>\n                    <strong>{this.props.getMsg('phase')}:</strong> {data.phase}\n\n                    <strong> {this.props.getMsg('start')}:</strong>\n                    <time dateTime={data.start.toISOString()}> {moment(data.start).format('LT')}</time>\n\n                    <strong> {this.props.getMsg('end')}:</strong>\n                    <time dateTime={data.end.toISOString()}> {moment(data.end).format('LT')}</time>\n\n                    <strong> {this.props.getMsg('duration')}:</strong>\n                    {' ' + moment.duration(data.end - data.start).humanize()}\n                </span>\n            );\n        },\n        renderAppInfo() {\n            const data = this.props.activityInFocus.get('data');\n            return (\n                <span>\n                    <strong>{this.props.getMsg('app')}:</strong> {data.targetname}\n                    <strong> {this.props.getMsg('time')}:</strong>\n                    <time dateTime={data.timestamp.toISOString()}>\n                        {' ' + moment(data.timestamp).format('LT')}\n                    </time>\n                </span>\n            );\n        },\n    });\n\n    activityStatistics.TimelineStatus = TimelineStatus;\n})(golab.tools.activityStatistics);\n"],"sourceRoot":"/source/"}