{"version":3,"sources":["update.js"],"names":[],"mappings":"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","file":"update.js","sourcesContent":["((activityStatistics) => {\n    const { Map: IMap } = Immutable;\n    const { State } = activityStatistics;\n\n    function setPrettyTargetName(activity) {\n        activity.targetname = golab.commons.prettyToolName(activity.targetname);\n        return activity;\n    }\n\n    const updaters = IMap({\n        'init': (state, rootElement) => {\n            return State.init(rootElement);\n        },\n        'init_with_preloaded_lanes': (state, rootElement, lanes) => {\n            return State.initWithPreloadedLanes(rootElement, lanes);\n        },\n        'set_phases': (state, phases=ISet()) => {\n            return state.set('phases', phases);\n        },\n        'set_apps': (state, apps=ISet()) => {\n            return state.set('apps', apps);\n        },\n        'minimize_status_bar': (state) => {\n            return state.set('statusBarMinimized', true);\n        },\n        'maximize_status_bar': (state) => {\n            return state.set('statusBarMinimized', false);\n        },\n        'set_show_app_activities': (state, showsApps) => {\n            return state.set('showAppActivities', showsApps);\n        },\n        'minimize_lane': (state, laneId) => {\n            return State.updateLane(state, laneId, l => l.set('minimized', true));\n        },\n        'maximize_lane': (state, laneId) => {\n            return State.updateLane(state, laneId, l => l.set('minimized', false));\n        },\n        'minimize_all_lanes': (state) => {\n            return State.updateLanes(state, (lanes) => {\n                return lanes.map(l => l.set('minimized', true));\n            });\n        },\n        'maximize_all_lanes': (state) => {\n            return State.updateLanes(state, (lanes) => {\n                return lanes.map(l => l.set('minimized', false));\n            });\n        },\n        'set_connection_status_open': (state) => {\n            return state.set('connectionStatus', State.CONN_OPEN);\n        },\n        'set_connection_status_closed': (state) => {\n            return state.set('connectionStatus', State.CONN_CLOSED);\n        },\n        'set_selected_day': (state, date) => {\n            return State.updateSelectedDay(state, date);\n        },\n        'highlight_phase': (state, phaseName) => {\n            return state\n            .set('highlightedPhase', phaseName)\n            .set('highlightedApp', '');\n        },\n        'dehighlight_phase': (state) => {\n            return state.set('highlightedPhase', '');\n        },\n        'highlight_app': (state, appName) => {\n            return state\n            .set('highlightedApp', appName)\n            .set('highlightedPhase', '')\n            .set('showAppActivities', true);\n        },\n        'dehighlight_app': (state) => {\n            return state.set('highlightedApp', '');\n        },\n        'focus_phase_activity': (state, username, rawActivity) => {\n            rawActivity.focussed = true;\n            // make sure immutable activities reflect change\n            state = State.updatePhaseActivities(state, username);\n            return state.set('activityInFocus', IMap({\n                type: 'phase', data: rawActivity\n            }));\n        },\n        'focus_app_activity': (state, username, rawActivity) => {\n            rawActivity.focussed = true;\n            // make sure immutable activities reflect change\n            state = State.updateAppActivities(state, username);\n            return state.set('activityInFocus', IMap({\n                type: 'app', data: rawActivity\n            }));\n        },\n        'unfocus_phase_activity': (state, username, rawActivity) => {\n            rawActivity.focussed = false;\n            // make sure immutable activities reflect change\n            state = State.updatePhaseActivities(state, username);\n            return state.set('activityInFocus', null);\n        },\n        'unfocus_app_activity': (state, username, rawActivity) => {\n            rawActivity.focussed = false;\n            // make sure immutable activities reflect change\n            state = State.updateAppActivities(state, username);\n            return state.set('activityInFocus', null);\n        },\n        'set_time_selection': (state, { min, max }) => {\n            return state.update('selectedTimeRange', (range) => {\n                return range.set('min', min).set('max', max);\n            });\n        },\n        'set_marker_position': (state, x) => {\n            return state.set('timeMarkerX', x);\n        },\n        'set_top_height': (state, topHeight) => {\n            return State.updateDimensions(state, { topHeight });\n        },\n        'set_bottom_height': (state, bottomHeight) => {\n            return State.updateDimensions(state, { bottomHeight });\n        },\n        'set_initial_phase_activities': (state, { username, activities }) => {\n            const phaseNames = activities.map((activity) => activity.phase);\n            state = activities.reduce((state, activity) => {\n                state = State.updateAvailableDays(state, activity.start);\n                return state.update('phases', (phases) => phases.add(activity.phase));\n            }, state);\n            return State.updatePhaseActivities(state, username, () => {\n                return activities;\n            });\n        },\n        'add_phase_activity': (state, { username, activity }) => {\n            state = State.updateAvailableDays(state, activity.start);\n            state = State.updatePhaseActivities(state, username, (activities) => {\n                activities.push(activity);\n                return activities;\n            });\n            return state.update('phases', (phases) => phases.add(activity.phase));\n        },\n        'change_phase_activity': (state, change) => {\n            const { username, property, value, activityIndex } = change;\n            return State.updatePhaseActivities(state, username, (activities) => {\n                activities[activityIndex][property] = value;\n                return activities;\n            });\n        },\n        'set_initial_app_activities': (state, { username, activities }) => {\n            activities = activities.map(setPrettyTargetName);\n            state = State.updateAppActivities(state, username, () => activities);\n            const appNames = activities.map((activity) => activity.targetname);\n            return state.update('apps', (apps) => apps.union(appNames));\n        },\n        'add_app_activity': (state, { username, activity }) => {\n            activity = setPrettyTargetName(activity);\n            state = State.updateAppActivities(state, username, (activities) => {\n                activities.push(activity);\n                return activities;\n            });\n            return state.update('apps', (apps) => apps.add(activity.targetname));\n        },\n        'change_app_activity': (state, change) => {\n            const { username, property, value, activityIndex } = change;\n            return State.updateAppActivities(state, username, (activities) => {\n                activities[activityIndex][property] = value;\n                return activities;\n            });\n        },\n        'resize': (state) => {\n            return State.updateDimensions(state);\n        },\n    });\n\n    activityStatistics.update = (state, actionName, ...args) => {\n        const updater = updaters.get(actionName);\n        if (typeof updater !== 'function') {\n            throw new Error(`Unhandled action \"${actionName}\".`);\n        }\n        console.log(`Handling action \"${actionName}\". Args: %O`, args);\n        return updater.apply(null, [state].concat(args));\n    };\n})(golab.tools.activityStatistics);\n"],"sourceRoot":"/source/"}