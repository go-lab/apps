{"version":3,"sources":["toolbar.js"],"names":[],"mappings":";;AAAA,CAAC,UAAS,kBAAkB,EAAE;AAC1B,sBAAkB,CAAC,OAAO,GAAG,OAAO,CAAC;;AAErC,aAAS,OAAO,CAAC,SAAS,EAAE,eAAe,EAAE,OAAO,EAAE;AAClD,iBAAS,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC;AACzB,eAAO,GAAG,OAAO,IAAI,EAAE,CAAC;;AAExB,YAAM,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,KAAK,CAAC;AAC/C,YAAM,qBAAqB,GAAG,kBAAkB,CAAC,MAAM,EAAE,CAAC;AAC1D,YAAM,SAAS,GAAG,YAAY,EAAE,CAAC;;AAEjC,cAAM,EAAE,CAAC;;AAET,eAAO;AACH,yBAAa,EAAE,sBAAsB;SACxC,CAAC;;AAEF,iBAAS,MAAM,GAAG;AACd,gBAAM,EAAE,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AAC9C,cAAE,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SACxB;;AAED,iBAAS,YAAY,GAAG;AACpB,mBAAO,CAAC,CAAC,gHAAgH,CAAC,CAAC;SAC9H;;;;AAID,iBAAS,UAAU,CAAC,UAAU,EAAE,MAAM,EAAE,YAAY,EAAE;AAClD,gBAAM,GAAG,GAAG,kBAAkB,CAAC,IAAI,CAAC,UAAU,CACxC,eAAe,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;AAC1C,gBAAM,IAAI,GAAG,CAAC,CAAC,oDAAoD,CAAC,CACnE,MAAM,CAAC,CAAC,CAAC,sDAAsD,GACtD,YAAY,GAAG,WAAW,CAAC,CAAC,CAAC;;AAEvC,gBAAI,UAAU,EAAE;AACZ,oBAAI,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;aAC1B,MAAM;AACH,oBAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;aAC3B;;AAED,gBAAM,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;AAEzC,gBAAI,CAAC,EAAE,CAAC,OAAO,EAAE,UAAS,KAAK,EAAE;AAC7B,qBAAK,CAAC,cAAc,EAAE,CAAC;AACvB,qCAAqB,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AAC1C,yBAAS,CAAC,KAAK,EAAE,CAAC;aACrB,CAAC,CAAC;;AAEH,mBAAO,IAAI,CAAC;SACf;;AAED,iBAAS,sBAAsB,CAAC,UAAU,EAAE,OAAO,EAAE;AACjD,iCAAqB,CAAC,SAAS,CAAC,UAAS,aAAa,EAAE;AACpD,oBAAI,aAAa,KAAK,UAAU,EAAE;AAC9B,2BAAO,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;iBACjE;aACJ,CAAC,CAAC;SACN;KACJ;CACJ,CAAA,CAAE,KAAK,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC","file":"toolbar.js","sourcesContent":["(function(activityStatistics) {\n    activityStatistics.Toolbar = Toolbar;\n\n    function Toolbar(container, languageHandler, options) {\n        container = $(container);\n        options = options || {};\n\n        const showLabels = options.showLabels || false;\n        const actionLinkClickEvents = activityStatistics.PubSub();\n        const focusTrap = getFocusTrap();\n\n        render();\n\n        return {\n            onActionClick: subscribeToActionClick,\n        };\n\n        function render() {\n            const ul = $('<ul></ul>').appendTo(container);\n            ul.append(focusTrap);\n        }\n\n        function getFocusTrap() {\n            return $('<activityStatistics href=\"#\" class=\"focus_trap sr-only\" aria-hidden=\"true\" tabindex=\"-1\"></activityStatistics>');\n        }\n\n        // action link is just activityStatistics link with an icon, and click events are published\n        // to `actionLinkClickEvents`\n        function actionLink(actionName, msgKey, glyphiconKey) {\n            const msg = activityStatistics.util.escapeHTML(\n                  languageHandler.getMessage(msgKey));\n            const link = $('<activityStatistics href=\"#\"></activityStatistics>')\n            .append($('<span aria-hidden=\"true\" class=\"glyphicon glyphicon-' +\n                      glyphiconKey + '\"></span>'));\n\n            if (showLabels) {\n                link.append(' ' + msg);\n            } else {\n                link.attr('title', msg);\n            }\n\n            const item = $('<li></li>').append(link);\n\n            item.on('click', function(event) {\n                event.preventDefault();\n                actionLinkClickEvents.publish(actionName);\n                focusTrap.focus();\n            });\n\n            return item;\n        }\n\n        function subscribeToActionClick(actionName, handler) {\n            actionLinkClickEvents.subscribe(function(clickedAction) {\n                if (clickedAction === actionName) {\n                    handler.apply(null, Array.prototype.slice.call(arguments, 1));\n                }\n            });\n        }\n    }\n})(golab.tools.activityStatistics);\n"],"sourceRoot":"/source/"}