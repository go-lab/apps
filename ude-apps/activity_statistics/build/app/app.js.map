{"version":3,"sources":["app.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(function(activityStatistics) {\n    activityStatistics.Application = Application;\n\n    const { Map: IMap, Set: ISet } = Immutable;\n    const { View, ActivityProvider, util, update } = activityStatistics;\n    const RESIZE_REFRESH_RATE = 500;\n    const getItemsBySpaceId = (spaceId) => {\n        return new Promise((resolve, reject) => {\n            ils.getItemsBySpaceId(spaceId, (result) => {\n                if (result.error) return reject(result.error);\n                resolve(result);\n            });\n        });\n    };\n\n    function Application(environmentHandlers, loadingIndicator, urlRoot, errorDisplay) {\n        const {\n            actionLogger,\n            languageHandler,\n            metadataHandler\n        } = environmentHandlers;\n        const getMsg = languageHandler.getMessage.bind(languageHandler);\n        const context = metadataHandler.getContext();\n        const ilsId = getIlsId(metadataHandler);\n\n        console.log('The application started. Yay!');\n        actionLogger.logApplicationStarted();\n\n        const rootElement = document.querySelector('#timeline');\n\n        const lifecycle = Lifecyle(update, (state) => {\n            ReactDOM.render(\n                <View state={state} action={lifecycle.executeAction} getMsg={getMsg} />,\n                rootElement\n            );\n        }, handleError);\n\n        const resize = () => lifecycle.executeAction('resize');\n        window.addEventListener(\n            'resize',\n            util.throttle(resize, RESIZE_REFRESH_RATE)\n        );\n\n        loadingIndicator.hide();\n\n        if (context === 'preview') {\n            console.log('Loading sample data since we are in preview mode');\n            loadSampleData(urlRoot).then((sampleData) => {\n                lifecycle.executeAction(\n                    'init_with_preloaded_lanes',\n                    rootElement,\n                    sampleData.get('lanes')\n                );\n                lifecycle.executeAction('set_phases', sampleData.get('phases'));\n                lifecycle.executeAction('set_apps', sampleData.get('apps'));\n                lifecycle.executeAction('set_connection_status_open');\n            }).catch(handleError);\n            return;\n        }\n\n        lifecycle.executeAction('init', rootElement);\n\n        if (context === 'graasp' || context === 'ils') {\n            loadIlsItems(ilsId).then((items) => {\n                lifecycle.executeAction('set_phases', items.get('phases'));\n                lifecycle.executeAction('set_apps', items.get('apps'));\n            }).catch(handleError);\n        }\n\n        const activityProvider = ActivityProvider({\n            clientId: Math.random().toString(),\n            eventBusAddress: 'http://golab-dev.collide.info/eventbus',\n            // eventBusAddress: 'http://localhost:8901/eventbus',\n            ilsId,\n            // ilsId: '55ba0fb4b03892f8b2bcba88' // http://graasp.eu/ils/55ba0fb4b5a072ca556738e0/?lang=en\n        });\n\n        triggerActionsOnActivityProviderEvents(\n            activityProvider,\n            lifecycle.executeAction,\n            IMap({\n                'connection_opened': 'set_connection_status_open',\n                'connection_closed': 'set_connection_status_closed',\n                'initial_phase_activities': 'set_initial_phase_activities',\n                'phase_activity_added': 'add_phase_activity',\n                'phase_activity_changed': 'change_phase_activity',\n                'initial_app_activities': 'set_initial_app_activities',\n                'app_activity_added': 'add_app_activity',\n                'app_activity_changed': 'change_app_activity',\n            })\n        );\n\n        function handleError(error, userMessage) {\n            userMessage = userMessage || getMsg('error_occured');\n            errorDisplay.show(userMessage);\n            console.error(error.stack);\n            loadingIndicator.hide();\n        }\n    }\n\n    function Lifecyle(update, render, handleError) {\n        let state;\n        function executeAction(actionName, ...args) {\n            try {\n                state = update(state, actionName, ...args);\n                console.log('rendering state. Raw: %O. As JS: %O', state, state.toJS());\n                render(state);\n            } catch(error) {\n                handleError(error);\n            }\n        }\n        return { executeAction };\n    }\n\n    function triggerActionsOnActivityProviderEvents(\n        provider,\n        triggerAction,\n        eventToActionMap\n    ) {\n        const triggerActionForProviderEvent = util.triggerActionOnEvent.bind(\n            null,\n            provider.on,\n            triggerAction\n        );\n\n        eventToActionMap.forEach((actionName, eventName) => {\n            triggerActionForProviderEvent(eventName, actionName);\n        });\n    }\n\n    function loadIlsItems(ilsId) {\n        let items = IMap({ phases: ISet(), apps: ISet() });\n        return getItemsBySpaceId(ilsId).then((phases) => {\n            phases = phases.filter((phase) => phase.visibilityLevel === 'public');\n            items = items.set(\n                'phases',\n                ISet(phases.map((phase) => phase.displayName))\n            );\n            const loadApps = phases.map((phase) => getItemsBySpaceId(phase.id));\n            return Promise.all(loadApps);\n        }).then((apps) => {\n            apps = R.flatten(apps)\n            .filter((app) => app.itemType === 'Application')\n            .map((app) => app.displayName);\n            return items.set('apps', ISet(apps));\n        });\n    }\n\n\n    function getIlsId(metadataHandler) {\n        switch (metadataHandler.getContext()) {\n            case 'ils': case 'graasp': return metadataHandler.getProvider().id;\n            default: return 'demo-space-id';\n        }\n    }\n\n    function loadSampleData(urlRoot) {\n        return new Promise((resolve, reject) => {\n            const scr = document.createElement('script');\n            scr.src = `${urlRoot}build/app/sampleData.js`;\n            document.body.appendChild(scr);\n            scr.onload = () => resolve(activityStatistics.sampleData);\n            scr.onerror = (error) => reject(\n                new Error('sample data could not be loaded'));\n        });\n    }\n})(golab.tools.activityStatistics);\n"],"sourceRoot":"/source/"}