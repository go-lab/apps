{"version":3,"sources":["raw_app_data_handler.js"],"names":[],"mappings":"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","file":"raw_app_data_handler.js","sourcesContent":["((activityStatistics) => {\n    const { util } = activityStatistics;\n    const isPhase = (target) => {\n        return (\n            target === 'Orientation' || target === 'Conceptualisation' ||\n            target === 'Investigation' || target === 'Discussion' ||\n            target === 'Conclusion'\n        );\n    };\n    const onlyActivities = R.filter((a) => !isPhase(a.targetname));\n    const rawDataHeader = [{\n        dataType: 'string',\n        title: 'targetname'\n    }, {\n        dataType: 'zonedDateTime',\n        title: 'timestamp'\n    }];\n\n    // converts event bus messages to domain events\n    // keeps track of the raw data to handle changes to data\n    activityStatistics.RawAppDataHandler = () => {\n        const rawData = {};\n\n        return {\n            handle(message) {\n                if (message.sessionControllerResultType === 'initTable') {\n                    return handleInitMessage(message);\n                }\n                if (message.sessionControllerResultType === 'deltaLogs') {\n                    return handleDeltaMessage(message);\n                }\n            },\n        };\n\n        function handleInitMessage(message) {\n            rawData[message.multiResultKey] = {\n                rows: message.rows || [],\n                username: message.username\n            };\n            return R.pipe(\n                util.eventBus.mapHeadersToRows,\n                onlyActivities,\n                (activities) => {\n                    return {\n                        name: 'initial_app_activities',\n                        data: { username: message.username, activities }\n                    };\n                }\n            )(message);\n        }\n\n        function handleDeltaMessage(message) {\n            if (!message.logs) return undefined;\n            const log = message.logs[0];\n            if (!log) return undefined;\n            if (log.actionName === 'appendRow') {\n                return handleAppendRow(message.multiResultKey, log);\n            }\n            if (log.actionName === 'changeCell') {\n                return handleChangeCell(message.multiResultKey, log);\n            }\n        }\n\n        function handleChangeCell(key, data) {\n            const affectedRow = rawData[key].rows[data.rowIndex];\n            const affectedHeader = rawDataHeader[data.columnIndex];\n            const previousValue = affectedRow[data.columnIndex];\n            if (previousValue === data.newValue) {\n                return null;\n            }\n            affectedRow[data.columnIndex] = data.newValue;\n            let value = data.newValue;\n            if (affectedHeader.dataType === 'zonedDateTime') {\n                value = new Date(value);\n            }\n            return {\n                name: 'app_activity_changed',\n                data: {\n                    username: rawData[key].username,\n                    property: affectedHeader.title.toLowerCase(),\n                    activityIndex: data.rowIndex,\n                    value,\n                }\n            };\n        }\n\n        function handleAppendRow(key, data) {\n            rawData[key].rows[data.index] = data.values;\n            const activity = util.eventBus.mapHeadersToRows({\n                header: rawDataHeader,\n                rows: [data.values],\n            })[0];\n\n            return {\n                name: 'app_activity_added',\n                data: {\n                    username: rawData[key].username,\n                    activity\n                },\n            };\n        }\n    };\n})(golab.tools.activityStatistics);\n"],"sourceRoot":"/source/"}