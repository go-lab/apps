(function(){"use strict";var t=function(t,e){return function(){return t.apply(e,arguments)}},e=function(t,e){function a(){this.constructor=t}for(var o in e)r.call(e,o)&&(t[o]=e[o]);return a.prototype=e.prototype,t.prototype=new a,t.__super__=e.prototype,t},r={}.hasOwnProperty;window.golab=window.golab||{},window.golab.ils=window.golab.ils||{},window.golab.ils.metadata=window.golab.ils.metadata||{},window.golab.ils.context=window.golab.ils.context||{},window.golab.ils.context.graasp="graasp",window.golab.ils.context.ils="ils",window.golab.ils.context.preview="preview",window.golab.ils.context.direct="direct",window.golab.ils.context.standalone="standalone",window.golab.ils.context.unknown="unknown",window.golab.ils.metadata.MetadataHandler=function(){function e(e,r){if(this.getILSStructure=t(this.getILSStructure,this),this.getContext=t(this.getContext,this),this.identifyContext=t(this.identifyContext,this),this._debug=!1,this._debug&&console.log("Initializing MetadataHandler."),this._context=this._context||this.identifyContext(),!e)throw"MetadataHandler needs an initial set of metadata at construction!";this._metadata=JSON.parse(JSON.stringify(e)),setTimeout(function(t){return function(){if(r)return r(null,t)}}(this),0),this._debug&&(console.log("MetadataHandler construction for "+this._metadata.generator.displayName+" complete. Using the following metadata:"),console.log(this._metadata),console.log("context: "+this.getContext()))}return e.prototype.generateUUID=function(){var t,e;return t=(new Date).getTime(),e="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){var r;return r=(t+16*Math.random())%16|0,t=Math.floor(t/16),"x"===e?r.toString(16):(7&r|8).toString(16)})},e.prototype.identifyContext=function(){var t,e,r;if(this._context=null,t=this.getParameterFromUrl("context"),null!=t)switch(t.toLowerCase()){case window.golab.ils.context.graasp:case window.golab.ils.context.ils:case window.golab.ils.context.preview:case window.golab.ils.context.direct:case window.golab.ils.context.standalone:case window.golab.ils.context.unknown:this._context=t.toLowerCase();break;default:console.warn("unknown url context parameter value: "+t)}else r=this.getParameterFromUrl("preview"),""===r&&(this._context=window.golab.ils.context.preview);if(!this._context)switch(e=ils.identifyContext(),this._debug&&(console.log("MetadataHandler.identifyContext. ils.identifyContext() returned:"),console.log(e)),e){case"graasp":this._context=window.golab.ils.context.graasp;break;case"preview":this._context=window.golab.ils.context.preview;break;case"standalone_ils":this._context=window.golab.ils.context.ils;break;case"standalone_html":this._context=window.golab.ils.context.standalone;break;default:this._context=window.golab.ils.context.unknown}if(this._debug)return console.log("identified context:"),console.log(this._context)},e.prototype.getContext=function(){return this._context},e.prototype.getParameterFromUrl=function(t){var e,r,a,o,n,i,s;if(t=t.toLowerCase(),a=null,s=location.search.trim().toLowerCase(),s&&"?"===s[0])for(i=s.substring(1).split("&"),e=0,r=i.length;e<r;e++)o=i[e],n=o.split("="),i.length&&n[0]===t&&(2===n.length?a=n[1]:1===n.length&&(a=""));return null!=a?decodeURIComponent(a):null},e.prototype.setId=function(t){return this._metadata.id=t,this},e.prototype.getId=function(){return this._metadata.id},e.prototype.setMetadata=function(t){return this._metadata=JSON.parse(JSON.stringify(t)),this},e.prototype.getMetadata=function(){return this._metadata},e.prototype.setActor=function(t){return this._metadata.actor=t},e.prototype.getActor=function(){return this._metadata.actor},e.prototype.getTarget=function(){return this._metadata.target},e.prototype.setTarget=function(t){return this._metadata.target=JSON.parse(JSON.stringify(t))},e.prototype.getGenerator=function(){return this._metadata.generator},e.prototype.getProvider=function(){return this._metadata.provider},e.prototype.getTargetDisplayName=function(){return this._metadata.target.displayName},e.prototype.setTargetDisplayName=function(t){return this._metadata.target.displayName=t},e.prototype.getTargetId=function(){return this._metadata.target.id},e.prototype.setTargetId=function(t){return this._metadata.target.id=t},e.prototype.getPublished=function(){return this._metadata.published},e.prototype.setMetadataFlag=function(t,e){return this._metadata.flags=this._metadata.flags||{},this._metadata.flags[t]=e},e.prototype.getMetadataFlag=function(t){return this._metadata.flags=this._metadata.flags||{},this._metadata.flags[t]},e.prototype.getILSStructure=function(t){return null!=window.ils?window.ils.getIls(function(e){return function(e){var r;return null!=e.error?t({error:"ils.getIls failed, cannot get ILS structure.",detail:e.error},null):(r={},r.id=e.id,r.url=e.profileUrl,r.displayName=e.displayName,r.phases=[],r.apps=[],window.ils.getItemsBySpaceId(e.id,function(e){var a,o,n,i,s,l,d;if(null!=e.error)return t({error:"ils.getItemsBySpaceId failed, cannot get ILS structure.",detail:e.error},null);for(l=function(t){return function(t,e){var a;return a=new $.Deferred,window.ils.getAppsBySpaceId(t.id,function(o){var n,i,s,l,d,p,u,c;if(null!=o.error)return a.fail();for(l=[],i=u=0,c=o.length;u<c;i=++u){if(n=o[i],s={id:n.id,displayName:n.displayName,url:n.appUrl,itemType:n.itemType,appType:n.appType},n.metadata&&n.metadata.settings)try{d={metadata:{actor:n.metadata.settings.actor,target:n.metadata.settings.target,id:n.metadata.settings.id,published:n.metadata.settings.published},content:JSON.parse(n.metadata.settings.content)},s.configuration=d}catch(t){p=t,console.warn("an error occurred while creating the configuration resource from the app.metadata.setting"),console.warn(p),console.warn(n)}l.push(s)}return r.phases[e]={id:t.id,type:t.metadata.type,displayName:t.displayName,visibilityLevel:t.visibilityLevel,apps:l},a.resolve()}),a.promise()}}(this),a=[],n=o=0,i=e.length;o<i;n=++o)s=e[n],null!=s.metadata?d=s.metadata.type:(d="User defined",s.metadata={},s.metadata.type="User defined"),"Vault"!==d&&"About"!==d&&("Application"!==s.itemType?"folder"!==s.spaceType?console.warn("ignoring a non-standard resource on top-level space."):a.push(l(s,n)):r.apps.push(s));return $.when.apply($,a).done(function(){return r.phases=r.phases.filter(function(t){return"undefined"!=typeof t}),t(null,r)}),$.when.apply($,a).fail(function(){return t({error:"getILSStructure failed when retrieving phase information."},null)})}))}}(this)):t({error:"ILS library not present, cannot get ILS structure."},null)},e.prototype.updateIdsAfterImporting=function(){return this.setId(this.generateUUID()),this.setTargetId(this.generateUUID())},e}(),window.golab.ils.metadata.GoLabMetadataHandler=function(t){function r(t,e){var a;if(this.identifyContext(),"undefined"!=typeof osapi&&null!==osapi)try{if(!ils)throw"ILS library needs to be present before using the (GoLab)MetadataHandler.";ils.getAppContextParameters(function(a){return function(o){return a._debug&&(console.log("received appContextParameters from ILS library:"),console.log(o)),t.actor.displayName=o.actor.displayName,t.actor.id=o.actor.id,t.actor.objectType=o.actor.objectType,null!=o.contextualActor&&(t.contextualActor=o.contextualActor),t.provider.displayName=o.provider.displayName,t.provider.id=o.provider.id,t.provider.objectType=o.provider.objectType,t.provider.inquiryPhase=o.provider.inquiryPhase,t.provider.inquiryPhaseId=o.provider.inquiryPhaseId,t.provider.inquiryPhaseName=o.provider.inquiryPhaseName,t.provider.url=o.provider.url,null!=o.provider.ilsHasAngeLA?t.provider.ilsHasAngeLA=o.provider.ilsHasAngeLA:t.provider.ilsHasAngeLA=!1,null!=o.provider.ilsHasAngeLO&&(t.provider.ilsHasAngeLO=o.provider.ilsHasAngeLO),t.provider.ilsHasAngeLO=!1,void 0===o.provider.id||"unknown"===o.provider.id?(a._debug&&console.log("MetadataHandler: preview context"),t.provider.objectType="unknown",t.provider.id="unknown",t.provider.displayName="unknown",t.provider.url=window.location.href,t.generator.url=gadgets.util.getUrlParameters().url,t.provider.inquiryPhase=void 0,t.provider.inquiryPhaseId=void 0,t.provider.inquiryPhaseName=void 0):void 0===o.provider.inquiryPhaseId||"unknown"===o.provider.inquiryPhaseId?(a._debug&&console.log("MetadataHandler: ILS metawidget context"),t.provider.inquiryPhase="ils",t.provider.inquiryPhaseId=void 0,t.provider.inquiryPhaseName=void 0,t.generator.displayName=t.provider.displayName,t.generator.id=t.provider.id,t.generator.objectType="ils",t.generator.url=t.provider.url):(a._debug&&console.log("MetadataHandler: application context"),t.generator.id=o.generator.id,t.generator.objectType=o.generator.objectType,t.generator.url=o.generator.url),t.storageId=o.storageId,t.storageType=o.storageType,r.__super__.constructor.call(a,t),e(null,a)}}(this))}catch(e){a=e,console.warn("error during metadata retrieval:"),console.warn(a),console.log("metadata so far:"),console.log(t)}else this._debug&&console.log("Running outside osapi/ils, using given metadata."),r.__super__.constructor.call(this,t),e(null,this)}return e(r,t),r}(window.golab.ils.metadata.MetadataHandler),window.golab.ils.metadata.LocalMetadataHandler=function(t){function r(t,e){var a,o,n,i,s;if(this.identifyContext(),o=function(){var t,e;if(t=window.location.pathname,e=window.location.pathname.split("/"),e.length>1)switch(e[1].toLocaleLowerCase()){case"production":t=e[1];break;case"experiments":t=e[1],e.length>2&&(t+="/"+e[2]);break;default:t=""}return(window.location.protocol+"//"+window.location.host+"/"+t).toLowerCase()},t.provider.id=o(),null!=this.getParameterFromUrl("provider")&&(t.provider.id=this.getParameterFromUrl("provider")),null!=document.title?t.provider.displayName=document.title:t.provider.displayName="unnamed",t.provider.ilsHasAngeLA=!1,t.provider.ilsHasAngeLO=!1,this._context===window.golab.ils.context.standalone?"true"===this.getParameterFromUrl("author")?t.actor.objectType="html_author":t.actor.objectType="html_student":t.actor.objectType="person",null!=this.getParameterFromUrl("username"))i=this.getParameterFromUrl("username");else if(this.getContext()===window.golab.ils.context.preview)i="Preview";else if(i=localStorage.getItem("goLabNickName"),!i){for(;!i;)i=prompt("Please enter nick name:"),i&&(i=i.trim());localStorage.setItem("goLabNickName",i)}i=i.trim(),s=window.document.title,s&&"["===s[0]||(window.document.title="["+i+"] "+s),t.actor.displayName=i,a=i.toLowerCase()+"@"+t.provider.id,t.actor.id=a,n=function(t){var e,r;return r=""+t,e=function(t){var e;if(e=r.lastIndexOf(t),e>=0)return r=r.substr(0,e)},e("?"),e("#"),r},null!=this.getParameterFromUrl("generator")?t.generator.id=this.getParameterFromUrl("generator"):t.generator.id=t.generator.displayName+"@"+n(t.provider.url),r.__super__.constructor.call(this,t),e(null,this)}return e(r,t),r}(window.golab.ils.metadata.MetadataHandler)}).call(this);
//# sourceMappingURL=MetadataHandler.js.map
