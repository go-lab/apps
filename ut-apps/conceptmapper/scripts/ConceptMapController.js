(function(){"use strict";var o,n,e;window.ut=window.ut||{},window.ut.tools=window.ut.tools||{},window.ut.tools.conceptmapper=window.ut.tools.conceptmapper||{},o=window.angular,e=golab.common.resourceLoader,window.ut.tools.conceptmapper.ConceptMapAngularApp=o.module("ConceptMapAngularApp",["LocalStorageModule","textAngular","monospaced.elastic","golabUtils"]),window.ut.tools.conceptmapper.ConceptMapAngularApp.factory("resourceLoader",[function(){return golab.common.resourceLoader}]),window.ut.tools.conceptmapper.ConceptMapAngularApp.factory("environmentHandlers",[function(){return window.ut.tools.conceptmapper.environmentHandlers}]),window.ut.tools.conceptmapper.ConceptMapAngularApp.factory("languageHandler",["environmentHandlers",function(o){return o.languageHandler}]),window.ut.tools.conceptmapper.ConceptMapAngularApp.factory("actionLogger",["environmentHandlers",function(o){var n;return n=o.conceptMap.actionLogger}]),window.ut.tools.conceptmapper.ConceptMapAngularApp.factory("fileStorage",[function(){return new ut.commons.persistency.FileStorage}]),window.ut.tools.conceptmapper.ConceptMapAngularApp.factory("storageHandler",["environmentHandlers",function(o){var n;return n=o.conceptMap.storageHandler}]),window.ut.tools.conceptmapper.ConceptMapAngularApp.factory("conceptMapModel",["environmentHandlers","configurationModel",function(o,n){var e;return e=new window.ut.tools.conceptmapper.ConceptMapModel(o,n)}]),window.ut.tools.conceptmapper.ConceptMapAngularApp.factory("configurationStorageHandler",["environmentHandlers",function(o){return o.configuration.storageHandler}]),window.ut.tools.conceptmapper.ConceptMapAngularApp.factory("configurationModel",["environmentHandlers",function(o){var n;return n=new window.ut.tools.conceptmapper.ConceptMapConfigurationModel(o)}]),window.ut.tools.conceptmapper.ConceptMapAngularApp.config(["$sceDelegateProvider",function(o){return o.resourceUrlWhitelist(["self",e.getBaseUrl()+"/**"])}]),window.ut.tools.conceptmapper.ConceptMapAngularApp.run(["$rootScope","conceptMapModel","configurationModel","actionLogger","languageHandler",function(o,n,t,a,r){return o.golab={},o.golab.startupFinished=!1,o.conceptMapModel=n,window.ut.tools.conceptmapper.model=o.conceptMapModel,window.ut.tools.conceptmapper.configurationModel=t,o.configurationModel=t,o.resourceLoader=e,o.languageHandler=r,o.actionLogger=a,o.applyAlternativeConfiguration=function(o){return o instanceof window.ut.tools.conceptmapper.ConceptMapModel&&null!=window.golab.tools.configuration.conceptmapper&&(console.log("no configuration resource found, but an 'old' js-configuration is present."),t.concepts.setValues(window.golab.tools.configuration.conceptmapper.concepts.value),t.relations.setValues(window.golab.tools.configuration.conceptmapper.relations.value),t.setSingleDocumentMode(!0),null!=window.golab.tools.configuration.conceptmapper.auto_load&&"true"===window.golab.tools.configuration.conceptmapper.auto_load.value&&t.setAutoLoadLatestResource(!0),!0)},o.parseLogs_=function(){return $("#ut_tools_conceptmapper_dialog").dialog({title:"Select log file to parse",resizable:!1,modal:!0,autoOpen:!1,height:200,width:500,closeOnEscape:!1,dialogClass:"ut_tools_conceptmapper_dialog",buttons:{Go:function(o){return function(){var o;return $("#ut_tools_conceptmapper_dialog").dialog("close"),o=$("#ut_tools_conceptmapper_dialog_input").val(),$.ajax({url:o,dataType:"jsonp",success:function(o){return console.log("ping")}})}}(this)}}),$("#ut_tools_conceptmapper_dialog_input").val("http://golab.collide.info/client/LochemC.json"),$("#ut_tools_conceptmapper_dialog").dialog("open"),$(".ui-dialog :button").blur()},o.parseLogs=function(n){return function(){return o.parseLogArray(window.actionlog_lochemee)}}(this),o.parseLogArray=function(n){return function(n){var e,t,a;for(console.log("log-entries arrived:"+n.length),$scope.logModel=[],t=0,a=n.length;t<a;t++)e=n[t],"conceptmapper"===e.generator.displayName&&(null==o.logModel[e.actor.id]&&(o.logModel[e.actor.id]=[]),o.logModel[e.actor.id].push(e));return console.log($scope.logModel),o.choseActor()}}(this),o.choseActor=function(n){return function(){var n,e,t,a;console.log("chose actor..."),$("#ut_tools_conceptmapper_dialog").dialog({title:"Chose actor to parse",resizable:!1,modal:!0,autoOpen:!1,height:600,width:600,closeOnEscape:!1,dialogClass:"ut_tools_conceptmapper_dialog",buttons:{Go:function(){var n;return $("#ut_tools_conceptmapper_dialog").dialog("close"),n=$("#ut_tools_conceptmapper_dialog_input").val(),console.log("parsing "+n),o.parseActor(n)}}}),n=[],t=$scope.logModel;for(e in t)a=t[e],n.push(e);return $("#ut_tools_conceptmapper_dialog_input").autocomplete({source:n,minLength:0,delay:0}),$("#ut_tools_conceptmapper_dialog").dialog("open"),$(".ui-dialog :button").blur(),$("#ut_tools_conceptmapper_dialog_input").autocomplete("search","")}}(this),o.parseActor=function(n){return function(n){var e,t,a,r,p;if(null==$scope.logModel[n])return console.log("no action from this actor can be found.");for(o.conceptMapModel.clearContent(),r=$scope.logModel[n],p=[],t=0,a=r.length;t<a;t++)e=r[t],p.push(o.conceptMapModel.applyLogAction(e));return p}}(this)}]),n=function(o,n){},window.ut.tools.conceptmapper.ConceptMapAngularApp.controller("ConceptMapController",["$scope","configurationModel",n])}).call(this);
//# sourceMappingURL=ConceptMapController.js.map
