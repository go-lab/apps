(function(){"use strict";var t=function(t,e){return function(){return t.apply(e,arguments)}},e=[].indexOf||function(t){for(var e=0,s=this.length;e<s;e++)if(e in this&&this[e]===t)return e;return-1};window.ut=window.ut||{},window.ut.commons=window.ut.commons||{},window.ut.commons.TogetherClient=function(){function s(e,s,i,o){this.model=e,this.metadataHandler=s,this.actionLogger=i,this.masterModel=o,this.applyActionLogMessage=t(this.applyActionLogMessage,this),this.chatReceived=t(this.chatReceived,this),this.chatSent=t(this.chatSent,this),this.logAction=t(this.logAction,this),this.sendCurrentState=t(this.sendCurrentState,this),this.setCurrentState=t(this.setCurrentState,this),this.setChatRecord=t(this.setChatRecord,this),this.setActionStatistics=t(this.setActionStatistics,this),this.increaseActionStatistic=t(this.increaseActionStatistic,this),this.increaseChatStatistic=t(this.increaseChatStatistic,this),this.setInitialState=t(this.setInitialState,this),this.welcomeLatecomer=t(this.welcomeLatecomer,this),this.peerDisconnected=t(this.peerDisconnected,this),this.leaveSession=t(this.leaveSession,this),this.getUserName=t(this.getUserName,this),this.iAmMaster=t(this.iAmMaster,this),this.electMaster=t(this.electMaster,this),this.logChat=t(this.logChat,this),this.fixDock=t(this.fixDock,this),this.updateActionChart=t(this.updateActionChart,this),this.updateChatChart=t(this.updateChatChart,this),this.initStatisticsDock=t(this.initStatisticsDock,this),this.initTogether=t(this.initTogether,this),this.createSessionID=t(this.createSessionID,this),this.debug=!0,this.showStatistics=!1,this.debug&&console.log("Initializing TogetherClient."),this.verbsWhitelist=["add","remove","change","open","clear"],window.sessionStorage.removeItem("togetherjs-session.status"),window.TogetherJSConfig_hubBase="https://hub.togetherjs.com",window.TogetherJSConfig_dontShowClicks=!1,window.TogetherJSConfig_autoStart=!0,window.TogetherJSConfig_disableWebRTC=!0,window.TogetherJSConfig_disableChat=!1,window.TogetherJSConfig_disableShareButton=!0,window.TogetherJSConfig_getUserName=this.getUserName,window.TogetherJSConfig_on_ready=this.initTogether,window.TogetherJSConfig_toolName=this.metadataHandler.getMetadata().generator.displayName,window.TogetherJSConfig_suppressJoinConfirmation=!0,window.TogetherJSConfig_suppressInvite=!0,window.TogetherJSConfig_ignoreForms=!0,window.TogetherJSConfig_findRoom=this.createSessionID(),window.TogetherJSTestSpy={},golab.common.resourceLoader.ready(function(){}),golab.common.resourceLoader.orderedLoad([["https://code.highcharts.com/highcharts.js","https://code.highcharts.com/modules/exporting.js","/libs/js/togetherjs/togetherjs-min.js"],["/libs/js/togetherjs/togetherjs.css","/libs/js/togetherjs/togetherjs_custom.css","/libs/js/togetherjs/togetherjsPackage.js"]])}return s.prototype.createSessionID=function(){var t,e;return e=this.getUserName().indexOf("_"),t=this.metadataHandler.getMetadata().generator.id,e!==-1?(console.warn("found an underscore _ in the username, adding the suffix to the room (used to create collaboration groups)"),t+=this.getUserName().substring(e,this.getUserName().length)):"group"===this.metadataHandler.getMetadata().actor.objectType&&(console.warn("found group information in metadata, adding the group ID to the room ID."),t+=this.metadataHandler.getMetadata().actor.id),console.log("using sessionID: "+t),t},s.prototype.initTogether=function(){if(this.debug&&console.log("TogetherJS init."),this.masterId=void 0,this.selfId=TogetherJS.require("peers").Self.id,this.debug&&console.log("clientId set to "+this.selfId),this.chatRecord=[],this.chatStatistics={},this.actionStatistics={},0===TogetherJS.require("peers").getAllPeers().length?(this.debug&&console.log("I'm the first in this session -> I am master."),this.masterId=this.selfId):this.debug&&console.log("somebody else is master, I'll know as soon as the initial state is sent."),this.lpg=new ut.commons.LeavePageDetector,this.lpg.addHandler(this.leaveSession),this.actionLogger.addLogListener(this),TogetherJS.hub.on("togetherjs.hello",this.welcomeLatecomer),TogetherJS.hub.on("togetherjs.bye",this.peerDisconnected),TogetherJS.hub.on("togetherjs.chat",this.chatReceived),TogetherJS.hub.on("initialState",this.setInitialState),TogetherJS.hub.on("chatRecord",this.setChatRecord),TogetherJS.hub.on("actionStatistics",this.setActionStatistics),TogetherJS.hub.on("currentState",this.setCurrentState),TogetherJS.hub.on("actionLog",this.applyActionLogMessage),TogetherJS.hub.on("electMaster",this.electMaster),TogetherJS.require("session").on("send",this.logChat),this.fixDock(),this.showStatistics)return this.initStatisticsDock(),this.updateChatChart(),this.updateActionChart()},s.prototype.initStatisticsDock=function(){return $("#togetherjs-container").append("<div id='togetherjs-statistics-dock'> <table id='statistics-table'> <tr> <td width='50%'><div id='togetherjs-statistics-chat'></div></td> <td width='50%'><div id='togetherjs-statistics-actions'></div></td> </tr> </table> </div>"),$("#togetherjs-statistics-dock").draggable({containment:"body"}),this.chatChart=new Highcharts.Chart({credits:{enabled:!1},chart:{renderTo:"togetherjs-statistics-chat",type:"column"},title:{text:"Chat statistics"},xAxis:{categories:["dummy"]},series:[{name:"messages sent",data:[42]}]}),this.actionChart=new Highcharts.Chart({credits:{enabled:!1},chart:{renderTo:"togetherjs-statistics-actions",type:"column"},title:{text:"Action statistics"},xAxis:{categories:["A","B","C","D"]},series:[{name:"actions performed",data:[3],color:"green"}]})},s.prototype.updateChatChart=function(){if(this.showStatistics)return this.chatChart.xAxis[0].categories=Object.keys(this.chatStatistics),this.chatChart.series[0].setData(Object.keys(this.chatStatistics).map(function(t){return function(e){return t.chatStatistics[e]}}(this)))},s.prototype.updateActionChart=function(){if(this.showStatistics)return this.actionChart.xAxis[0].categories=Object.keys(this.actionStatistics),this.actionChart.series[0].setData(Object.keys(this.actionStatistics).map(function(t){return function(e){return t.actionStatistics[e]}}(this)))},s.prototype.fixDock=function(){return $("#togetherjs-dock").draggable({containment:"body"}),$("#togetherjs-chat").draggable({containment:"body"}),$("#togetherjs-rtc-info").draggable({containment:"body"}),$("#togetherjs-share").draggable({containment:"body"})},s.prototype.logChat=function(t){var e;if("chat"===t.type)return e={objectType:"chat",text:t.text,messageId:t.messageId,clientId:t.clientId},this.actionLogger.logSend(e)},s.prototype.electMaster=function(){var t,e,s,i,o;for(s=this.selfId,o=TogetherJS.require("peers").getAllPeers(),t=0,e=o.length;t<e;t++)i=o[t],console.log("checking peer:"),console.log(i),"bye"!==i.status&&"inactive"!==i.idle&&i.id!==this.masterId&&i.id>s&&(s=i.id);if(s===this.masterId){if(this.debug)return console.log("the new master is the same as the old master, no further actions necessary.")}else if(this.masterId=s,console.log("new master selected: "+this.masterId),this.iAmMaster())return this.debug&&console.log("it's me! send out the current state."),this.sendCurrentState()},s.prototype.iAmMaster=function(){return this.selfId===this.masterId},s.prototype.getUserName=function(){return this.metadataHandler.getActor().displayName},s.prototype.leaveSession=function(){return this.debug&&console.log("leaving session"),TogetherJS.require("session").close()},s.prototype.peerDisconnected=function(t){return this.debug&&console.log("peer disconnected:"),this.debug&&console.log(t),t.clientId===this.masterId?(this.debug&&console.log("the master disconnected - we have to elect a new one"),TogetherJS.send({type:"electMaster"}),this.electMaster()):this.debug?console.log("somebody disconnected, but it's not the master"):void 0},s.prototype.welcomeLatecomer=function(t){return this.debug&&console.log("latecomer detected. shall I send the initial content?"),console.log("..."+this.iAmMaster()),this.iAmMaster()&&(TogetherJS.send({type:"initialState",forClient:t.clientId,model:this.model.getResourceContent()}),TogetherJS.send({type:"chatRecord",forClient:t.clientId,chatRecord:this.chatRecord}),TogetherJS.send({type:"actionStatistics",forClient:t.clientId,actionStatistics:this.actionStatistics})),null==this.chatStatistics[t.peer.name]&&(this.chatStatistics[t.peer.name]=0),null==this.actionStatistics[t.peer.name]&&(this.actionStatistics[t.peer.name]=0),this.updateChatChart()},s.prototype.setInitialState=function(t){return t.forClient===this.selfId?(this.model.loadContentFromExternalState(t.model),this.masterId=t.clientId,!0):(this.debug&&console.log("ignoring 'initialState' message, it was meant for a different client"),!1)},s.prototype.increaseChatStatistic=function(t){return null!=this.chatStatistics[t]?this.chatStatistics[t]=this.chatStatistics[t]+1:this.chatStatistics[t]=1},s.prototype.increaseActionStatistic=function(t){return null!=this.actionStatistics[t]?this.actionStatistics[t]=this.actionStatistics[t]+1:this.actionStatistics[t]=1},s.prototype.setActionStatistics=function(t){if(t.forClient===this.selfId)return console.log(t),this.actionStatistics=t.actionStatistics,this.updateActionChart()},s.prototype.setChatRecord=function(t){var e,s,i,o,n,a,r,h,c,d,g,l;if(t.forClient===this.selfId){for(this.chatRecord=t.chatRecord,this.masterId=t.clientId,this.chatStatistics[TogetherJS.require("peers").Self.name]=0,l=this.chatRecord,r=0,h=l.length;r<h;r++)i=l[r],null!=i.text&&(this.increaseChatStatistic(i.name),n=new Date(i.date),a=n.getHours(),c=n.getMinutes(),a>12?(a-=12,s="PM"):s="AM",i.name===TogetherJS.require("peers").Self.name?(g="togetherjs-person-self",e="togetherjs-person-name-abbrev togetherjs-person-name-abbrev-self",d="me"):(o=i.clientId.replace(".","_"),g="togetherjs-person-"+o+" togetherjs-person-other-url",e="togetherjs-person-name-abbrev togetherjs-person-name-abbrev-"+o,d=i.name),$("#togetherjs-chat-messages").append("<div class='togetherjs-chat-item togetherjs-chat-message' data-person='"+i.clientId+"' data-date='"+t.data+"' data-message-id='"+i.messageId+"' id='togetherjs-chat-"+i.messageId+"'> <div class='togetherjs-person "+g+"' title='"+i.name+"' style='border-color: rgb(143, 188, 143); background-image: url(&quot;https://togetherjs.com/togetherjs/images/default-avatar.png&quot;);'> <div class='togetherjs-person-avatar-swatch' style='border-top-color: rgb(143, 188, 143); border-right-color: rgb(143, 188, 143);'></div> </div> <div class='togetherjs-timestamp'> <span class='togetherjs-time'>"+a+":"+c+"</span> <span class='togetherjs-ampm'>"+s+"</span> </div> <div class='"+e+"'>"+d+"</div> <div class='togetherjs-chat-content'>"+i.text+"</div> </div>"));return this.updateChatChart(),!0}return this.debug&&console.log("ignoring 'chatRecord' message, it was meant for a different client"),!1},s.prototype.setCurrentState=function(t){return this.iAmMaster()?(console.log("master-conflict, trigger an election"),TogetherJS.send({type:"electMaster"}),this.electMaster(),!1):(console.log("master state received, apply and reset log action timer."),window.clearTimeout(this.logActionSentTimeout),this.model.loadContentFromExternalState(t.model),!0)},s.prototype.sendCurrentState=function(){return TogetherJS.send({type:"currentState",model:this.model.getResourceContent()})},s.prototype.logAction=function(t){var s;if(this.debug&&console.log("LogAction received from local model: "+t.verb),console.log(t),TogetherJS.running)return s=t.verb,e.call(this.verbsWhitelist,s)>=0?(this.increaseActionStatistic(TogetherJS.require("peers").Self.name),this.updateActionChart(),this.iAmMaster()?(console.log("local model changed, and I'm master -> send the current state."),this.sendCurrentState()):(console.log("local model changed, and I'm client -> send the action and init timer."),TogetherJS.send({type:"actionLog",logObject:t}),this.logActionSentTimeout=setTimeout(function(t){return function(){return t.debug&&console.log("I've sent out an action log some time ago, but my timer wasn't reset."),t.debug&&console.log("Is the master dead? Triggering an election."),TogetherJS.send({type:"electMaster"}),t.electMaster()}}(this),5e3))):"send"===t.verb?this.chatSent(t):(console.log("ignoring non-whitelisted action log verb '"+t.verb+"'"),!1)},s.prototype.chatSent=function(t){return this.chatRecord.push({text:t.object.text,clientId:t.object.clientId,date:Date.now(),messageId:t.object.messageId,name:TogetherJS.require("peers").Self.name}),this.increaseChatStatistic(TogetherJS.require("peers").Self.name),this.updateChatChart()},s.prototype.chatReceived=function(t){return console.log("chat Received:"),console.log(t),this.chatRecord.push({text:t.text,clientId:t.peer.id,date:Date.now(),messageId:t.messageId,name:t.peer.name}),this.increaseChatStatistic(t.peer.name),this.updateChatChart()},s.prototype.applyActionLogMessage=function(t){return t.clientId===this.selfId?(console.warn("ignoring message sent by myself, this shouldn't happen."),!1):null==t.logObject?(console.warn("ignoring message without a logObject, this shouldn't happen"),!1):(this.increaseActionStatistic(t.peer.name),this.updateActionChart(),this.iAmMaster()?this.model.applyLogAction(t.logObject,function(t){return function(){return t.debug&&console.log("remote action log has been applied to local master model, send out the current state."),t.sendCurrentState(),!0}}(this)):this.debug?console.log("remote action log received, but I'm not master -> ignore."):void 0)},s}()}).call(this);
//# sourceMappingURL=TogetherClient.js.map
