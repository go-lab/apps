(function(){"use strict";var o,s,t,e,r,n,i;this.golab=this.golab||{},this.golab.common=this.golab.common||{},this.golab.common.resourceLoader=this.golab.common.resourceLoader||{},n=this.golab.common.resourceLoader,o=!1,t={observationToolLibs:[["font-awesome","/libs/js/jsonr.js","jquery"],["jquery-ui","bootstrap"],["angular1.5"],["goLabUtils","eventEmitter","/libs/js/jquery.filter_input.js","/libs/js/angular/elastic.js"],["createEnvironmentHandlers","goLabModels","/commons/js/multiResourceEventEmitterModel.js"],["collaboration"],["/commons/js/PersistencyUtils.js","/commons/js/utils.js","/commons/js/angular/dragAndDrop.js","/commons/js/angular/ngDataStore.js","/commons/js/dataSource.js","/commons/js/dataStore.js","textAngular"]]},n.addResourceModules(t),e={observationToolScripts:[["styles/observationTool.css","scripts/observationTool.js"],["scripts/controllers/observationToolCtrl.js","scripts/directives/observationEditor.js","scripts/directives/observation.js","scripts/directives/observations.js","scripts/directives/observationControls.js","scripts/model/observationsModel.js","scripts/model/observationToolConfigurationModel.js","scripts/model/observationActionLogger.js"]]},n.addResourceModules(e,"/tools/observationTool/src/main/webapp/"),n.addResourceModules({observationTool:[["observationToolLibs"],["observationToolScripts"]]}),this.golab=this.golab||{},this.golab.tools=this.golab.tools||{},this.golab.tools.observationtool=this.golab.tools.observationtool||{},r=this.golab.tools.observationtool,s=[["observationTool"]],i=function(){var t;return t=function(){return n.orderedLoad(s),n.ready(function(){return window.golab.common.createEnvironmentHandlers(["observations","configuration"],"observationTool",n.getDesiredLanguage(),{notificationServer:null},function(o){return window.golab.tools.observationtool.environmentHandlers=o,angular.bootstrap(document.body,["observationTool"])})})},"undefined"!=typeof window.gadgets?(o&&console.log("loadAndStartObservationTool through gadgets.util"),window.gadgets.util.registerOnLoadHandler(t)):(o&&console.log("direct loadAndStartObservationTool"),t())},r.startObservationTool=function(){return i()}}).call(this);
//# sourceMappingURL=observationToolModule.js.map
