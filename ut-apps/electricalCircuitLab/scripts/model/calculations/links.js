(function(){"use strict";var t,i=function(t,i){return function(){return t.apply(i,arguments)}};window.ut=window.ut||{},ut.simulations=ut.simulations||{},ut.simulations.electricity=ut.simulations.electricity||{},ut.simulations.electricity.Node=function(){function t(t){this.id=t}return t.prototype.getId=function(){return this.id},t}(),ut.simulations.electricity.Link=function(){function t(t,i,n){this.fromNode=t,this.toNode=i,this.id=n,Object.defineProperties(this,{fromNode:{value:this.fromNode,writable:!1,configurable:!1},toNode:{value:this.toNode,writable:!1,configurable:!1},id:{value:this.id,writable:!1,configurable:!1}})}return t}(),t={fromNode:null,toNode:null},ut.simulations.electricity.LinkArray=function(){function t(){this.removeLink=i(this.removeLink,this),this.links={},this.array=null,this.fromLinks={},this.toLinks={},Object.defineProperties(this,{length:{get:this.size}})}return t.prototype.addLink=function(t){return this.links[t.id]=t,this.resetIndex(),this},t.prototype.removeLink=function(t){return delete this.links[t.id],this.resetIndex(),this},t.prototype.size=function(){return this.index(),this.array.length},t.prototype.asArray=function(){return this.index(),this.array},t.prototype.resetIndex=function(){return this.array=null},t.prototype.index=function(){var t,i,n,e,r,o,s;if(!this.array){this.array=[],this.fromLinks=[],this.toLinks=[],s=this.links;for(n in s)e=s[n],this.array.push(e),null==(t=this.fromLinks)[r=e.fromNode.getId()]&&(t[r]=[]),this.fromLinks[e.fromNode.getId()].push(e),null==(i=this.toLinks)[o=e.toNode.getId()]&&(i[o]=[]),this.toLinks[e.toNode.getId()].push(e)}return this.array},t.prototype.getFromLinks=function(t){var i,n;return this.index(),null!=(i=this.fromLinks)[n=t.getId()]?i[n]:i[n]=[]},t.prototype.getToLinks=function(t){var i,n;return this.index(),null!=(i=this.toLinks)[n=t.getId()]?i[n]:i[n]=[]},t.prototype.getFilteredLinks=function(t){var i,n,e,r;e=this.links,r=[];for(i in e)n=e[i],t(n)&&r.push(n);return r},t.prototype.getAllLinksAsString=function(t){var i,n,e,r,o,s;s="",e="","string"==typeof t&&(e=t),i=0,o=this.links;for(n in o)r=o[n],s+=e+i+": "+r+"\n",i++;return s.length>0&&(s=s.substr(0,s.length-1)),s},t}()}).call(this);
//# sourceMappingURL=links.js.map
