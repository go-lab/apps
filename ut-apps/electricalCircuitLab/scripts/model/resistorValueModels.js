(function(){"use strict";var t;window.ut=window.ut||{},ut.simulations=ut.simulations||{},ut.simulations.electricity=ut.simulations.electricity||{},ut.simulations.electricity.digitLabels=[0,1,2,3,4,5,6,7,8,9],ut.simulations.electricity.multiplierLabels=["1","10","100","1k","10k","100k","1M","10M"],t={values:[],resistorValueColorModel:null},ut.simulations.electricity.ResistorValueSingleColorModel=function(){function t(t,i,e){this.values=t,this.resistorValueColorModel=e,this.selectedValue=this.values[i]}return t.prototype.getValue=function(){return this.selectedValue},t.prototype.setValue=function(t){if(t!==this.selectedValue&&(this.selectedValue=t,this.resistorValueColorModel))return this.resistorValueColorModel.colorChanged()},t.prototype.setValueIndex=function(t){return this.setValue(this.values[t])},t}(),ut.simulations.electricity.ResistorValueColorModel=function(){function t(t){var i,e,l;e=ut.simulations.electricity.digitLabels,l=ut.simulations.electricity.multiplierLabels,i=ut.simulations.electricity.valueToColors(t),this.digit1=new ut.simulations.electricity.ResistorValueSingleColorModel(e,i.digit1,this),this.digit2=new ut.simulations.electricity.ResistorValueSingleColorModel(e,i.digit2,this),this.digit3=new ut.simulations.electricity.ResistorValueSingleColorModel(e,i.digit3,this),this.multiplier=new ut.simulations.electricity.ResistorValueSingleColorModel(l,i.multiplier,this),this.colorModels=[this.digit1,this.digit2,this.digit3,this.multiplier],this.colorChanged()}return t.prototype.colorChanged=function(){var t;return t={digit1:this.digit1.selectedValue,digit2:this.digit2.selectedValue,digit3:this.digit3.selectedValue,multiplier:this.multiplier.selectedValue},this.resistance=ut.simulations.electricity.colorsToValue(t),this.resistanceShortcut=ut.simulations.electricity.valueToShortcut(this.resistance)},t.prototype.setResistance=function(t){var i;return i=ut.simulations.electricity.valueToColors(t),this.digit1.setValueIndex(i.digit1),this.digit2.setValueIndex(i.digit2),this.digit3.setValueIndex(i.digit3),this.multiplier.setValueIndex(i.multiplier)},t}()}).call(this);
//# sourceMappingURL=resistorValueModels.js.map
