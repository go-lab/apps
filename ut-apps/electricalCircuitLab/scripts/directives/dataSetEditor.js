(function(){"use strict";var e,t,n,l,a,o,r;window.ut=window.ut||{},ut.tools=ut.tools||{},ut.tools.dataviewer=ut.tools.dataviewer||{},ut.commons=ut.commons||{},ut.commons.utils=ut.commons.utils||{},window.google=window.google||{},window.google.visualization=window.google.visualization||{},r=!0,o=new ut.tools.dataviewer.StoredDataSourceColumn({imageInformation:null},{type:"",id:"",label:"",unit:""}),l=function(e){return{restrict:"E",template:'<div class="dataSetEditor">\n  <span class=\'nextToEachOther\'>\n    <div class=\'topLeftCorner\'></div>\n    <div class=\'verticalScrollContainerWithoutScrollBar\'>\n      <div>\n        <table class="indexTable" border="1" Xng-hide="noDataSetColumns">\n          <tr ng-repeat="rowIndex in displayRowIndices" class="row{{$index}}">\n            <td class="dataSetRowIndex indexColumn selectionChangeArea" ng-click="invertRowSelection(rowIndex)">\n              <div class=\'indexDisplay selectionDisplay\' ng-class="{cellSelected: isRowSelected($index)}">{{rowIndex+1}}</div>\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </span>\n  <span class=\'nextToEachOther\'>\n    <div class=\'horizontalScrollContainerWithoutScrollBar\'>\n      <div>\n        <table class="labelTable" border="1" Xng-hide="noDataSetColumns">\n          <tr>\n            <td ng-repeat="dataSourceColumn in getDataSourceColumns()"\n              ng-click="invertColumnSelection($index)" class=\'dataColumn selectionChangeArea\'>\n              <div class="selectionDisplay" ng-class="{cellSelected: isColumnSelected($index)}">\n                <dataSetColumnEditor index=\'{{$index}}\'></dataSetColumnEditor>\n              </div>\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n    <div class=\'dualScrollContainer\'>\n      <div>\n        <table class="dataTable" border="1" ng-hide="noDataSetColumns">\n          <tr ng-repeat="rowIndex in rowIndices" class="row{{$index}}">\n            <td ng-repeat="columnIndex in columnIndices" class=\'dataColumn\'>\n              <div class="dataColumn_1 cellSelectionDisplay column{{$index}}" ng-class="{dataCellSelected: isCellSelected(rowIndex, columnIndex)}">\n                <dataSetCellEditor></dataSetCellEditor>\n              </div>\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </span>\n</div>',replace:!1,link:function(t,n,l){var a,r,i,d,u,c,s,g,f,C,m,p,S,h,v,w,b;return r=function(){return t.rowIndices=[],t.displayRowIndices=[0],t.columnIndices=[]},t.getDataSourceColumns=function(){var e;return e=t.dataSet.getDataSourceColumns(),0===e.length?[o]:e},i=function(){var e,n,l,a,o;if(r(),e=t.dataSet,n=e.getNrOfDataRows(),n>0?(t.rowIndices=function(){a=[];for(var e=0,t=n-1;0<=t?e<=t:e>=t;0<=t?e++:e--)a.push(e);return a}.apply(this),t.displayRowIndices=t.rowIndices):t.displayRowIndices=[0],l=e.getNrOfDataSourceColumns(),l>0)return t.columnIndices=function(){o=[];for(var e=0,t=l-1;0<=t?e<=t:e>=t;0<=t?e++:e--)o.push(e);return o}.apply(this)},t.dataSet.addListener("modelChanged",function(){return i(),e(function(){})}),i(),t.$watch("dataSetEditor.rowToShow",function(l){if(l>=0)return e(function(){var e,a;return a=n.find(".row"+l),ut.commons.utils.scrollVerticalToVisible(a),t.dataSetEditor.rowToShow=-1,e=a.find("input:first"),e.focus()})}),t.enterInCellEditor=function(e,n){var l;return l=Math.min(t.dataSet.getNrOfDataRows()-1,e+1),v(l,n)},v=function(l,a){var o,r;if(r=n.find(".dataSetCellValueEditor"),r.length)return o=l*t.dataSet.getNrOfDataSourceColumns()+a,o<r.length?e(function(){return $(r[o]).select()}):console.warn("calculated dataSetCellValueEditorIndex ("+o+") is larger then available: "+r.length)},p=$(window),b=n.find(".verticalScrollContainerWithoutScrollBar"),m=n.find(".horizontalScrollContainerWithoutScrollBar"),u=n.find(".dualScrollContainer"),w=n.find(".topLeftCorner"),S=n.find(".labelTable"),d=0,f=0,h=16,s=function(e){if(e.length>0)return e.hasClass("dialogBoxContent")?f=e.width():s(e.parent())},s(n),a=function(){var e,t,n;return e=f>0?f:p.width(),t=S.width(),n=e-C(),t=Math.min(t,n),u.width(n),m.width(n-h)},C=function(){var e,t;return e=u.position().left,t=0,e>0&&(t=e,0===f?t+=10:t-=20),t},c=function(){var t,n,l;return t=u.position().left,l=C(),l>0?(d=l,0===f&&p.resize(function(){return a()}),n=$(u.children()[0]),h=u.width()-n.width(),b.height(u.height()-h),a()):e(c,500)},g=function(){var t;return t=S.height(),t>0?w.height(t+2):e(g,500)},e(function(){return c(),g()},500),u.scroll(function(){return b.scrollTop(u.scrollTop()),m.scrollLeft(u.scrollLeft())}),m.scroll(function(){return u.scrollLeft(m.scrollLeft())})}}},window.ut.tools.dataviewer.dataTool.directive("dataSetEditor".toLowerCase(),["$timeout",l]),n=function(e){return{restrict:"E",template:'<table class="dataSourceColumnEditor">\n  <tr>\n    <td>\n      <i class="fa fa-desktop fa-fw" title="{{\'dataSet.editor.label\' | g4i18n}}"></i>\n    </td>\n    <td>\n      <input ng-model="label" ng-blur=\'labelChanged()\' ng-click=\'blockClick($event)\' ng-enter="enterInLabel()"\n        ng-disabled=\'empty\' class="dataSourceColumnLabelEditor" /><br/>\n    </td>\n  </tr>\n  <tr>\n    <td class=\'indexDisplay\'>{{index}}</td>\n    <td>\n      <select ng-model="dataType" ng-options="type for type in googleVisualizationDataTypes" ng-click=\'blockClick($event)\'\n         ng-disabled=\'empty\' class="dataSourceColumnTypeEditor"></select>\n    </td>\n  </tr>\n</div>',replace:!1,link:function(t,n,l){var a,o,i,d,u;return a=t.dataSet.getDataSetActionLogger(),o=t.dataSourceColumn,i=n.find(".dataSourceColumnTypeEditor"),d=function(){var e,n,a,o,r,i,d,u,c,s,g;if(i=ut.commons.utils.getAttributeValue(l,"index",""),i.length){for(a=[],c=parseInt(i),o=!1;!o;)u=Math.floor(c/26),g=c-26*u,a.push(String.fromCharCode(65+g)),0===u?o=!0:c=u;for(n="",s=a.reverse(),r=0,d=s.length;r<d;r++)e=s[r],n+=e;return t.index=n}return t.index=""},d(),u=function(){return o=t.dataSourceColumn,t.label=o.getLabel(),t.dataType=o.getType(),t.empty=0===o.getId().length},u(),t.$watch("dataSourceColumn",function(){return u()}),t.blockClick=function(e){return e.stopPropagation&&e.stopPropagation(),e.preventDefault&&e.preventDefault(),e.cancelBubble=!0,e.returnValue=!1},t.labelChanged=function(){if(o.getLabel()!==t.label)return t.dataSet.setDataSourceColumnLabel(o.getId(),t.label),a.logColumnLabelChanged(o.getId(),t.label)},t.enterInLabel=function(){return t.labelChanged(),e(function(){return i.focus()})},t.$watch("dataType",function(e){if(o.getType()!==e)return t.dataSet.setDataSourceColumnType(o.getId(),e,r),a.logColumnTypeChanged(o.getId(),e)})}}},window.ut.tools.dataviewer.dataTool.directive("dataSetColumnEditor".toLowerCase(),["$timeout",n]),a={columnIndex:0},e=function(e){return{restrict:"E",template:'<div class="dataSetCell">\n  <div class="realValue">\n    <i class="fa fa-ellipsis-h fa-fw" title="{{\'dataSet.editor.value\' | g4i18n}}" ng-hide="hideDisplayValues"></i>\n    <input ng-model="cellValue" ng-blur=\'cellValueChanged()\' ng-enter="enterInCellValue()"\n      class="dataSetCellValueEditor valueType_{{columnType}}" />\n  </div>\n  <div class="displayValue" ng-hide="hideDisplayValues">\n    <i class="fa fa-desktop fa-fw" title="{{\'dataSet.editor.display\' | g4i18n}}"></i>\n    <input ng-model="formattedCellValue" ng-blur=\'formattedCellValueChanged()\'\n      class="dataSetCellFormattedValueEditor valueType_{{columnType}}" />\n  </div>\n</div>',replace:!1,link:function(e,t,n){var l,a,o,i,d,u,c,s,g;return o=e.dataSet.getDataSetActionLogger(),e.hideDisplayValues=r,g=function(e){return null===e?"":""+e},a=e.dataSet,d=e.rowIndex,l=e.columnIndex,u="",i="",s=function(){var t,n,o,r;return a=e.dataSet,d=e.rowIndex,l=e.columnIndex,u="",i="",n=null,o=a.getNrOfDataSourceColumns(),r=a.getNrOfDataRows(),r>0&&d<r&&o>0&&l<o&&(t=a.getDataTable().getValue(d,l),u=g(t),i=a.getDataTable().getFormattedValue(d,l),u===i&&(i=""),n=a.getDataTable().getColumnType(l)),e.cellValue=u,e.formattedCellValue=i,e.columnType=n},s(),e.dataSet.addListener("modelChanged",function(){return s()}),c=function(){var t,n;if(t=e.cellValue.trim(),n=e.formattedCellValue.trim(),t!==u||n!==i)return 0!==n.length&&t!==n||(n=null),a.setDataCellValue(d,l,t,n),o.logCellChanged(d,l,t,n)},e.cellValueChanged=function(){return c()},e.formattedCellValueChanged=function(){return c()},e.enterInCellValue=function(){return c(),e.enterInCellEditor(d,l)}}}},t=function(e){return{restrict:"E",template:'<div class="dataSetCell">\n  <input ng-model="cellValue" ng-blur=\'cellValueChanged()\' ng-enter="enterInCellValue()"\n    class="dataSetCellValueEditor valueType_{{columnType}}" />\n</div>',replace:!1,link:function(e,t,n){var l,a,o,r,i,d,u,c;return o=e.dataSet.getDataSetActionLogger(),c=function(e){return null===e?"":""+e},a=e.dataSet,r=e.rowIndex,l=e.columnIndex,i="",u=function(){var t,n,o,d;return a=e.dataSet,r=e.rowIndex,l=e.columnIndex,i="",n=null,o=a.getNrOfDataSourceColumns(),d=a.getNrOfDataRows(),d>0&&r<d&&o>0&&l<o&&(t=a.getDataTable().getValue(r,l),i=c(t),n=a.getDataTable().getColumnType(l)),e.cellValue=i,e.columnType=n},u(),e.dataSet.addListener("modelChanged",function(){return u()}),d=function(){var t,n;if(t=e.cellValue.trim(),n=t,t!==i)return 0!==n.length&&t!==n||(n=null),a.setDataCellValue(r,l,t,n),o.logCellChanged(r,l,t,n)},e.cellValueChanged=function(){return d()},e.enterInCellValue=function(){return d(),e.enterInCellEditor(r,l)}}}},window.ut.tools.dataviewer.dataTool.directive("dataSetCellEditor".toLowerCase(),["$timeout",t])}).call(this);
//# sourceMappingURL=dataSetEditor.js.map
