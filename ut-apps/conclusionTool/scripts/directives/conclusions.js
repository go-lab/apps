(function(){"use strict";var n;window.ut=window.ut||{},ut.commons=ut.commons||{},ut.tools=ut.tools||{},ut.tools.conclusions=ut.tools.conclusions||{},n=function(n,e){return{restrict:"E",template:'<div class="conclusionsBlock" ng-show=\'selectedStatementConclusion\'>\n  <table width="100%" border="0">\n    <tr>\n      <td colspan=\'9\'><div class="blockTitle" g4i18n="conclusions.argueTitle"></div></td>\n    </tr>\n    <tr ng-show="configurationModel.showHypothesisConfidenceMeter && confidences.defined">\n      <td colspan=\'9\'>\n        <div class="blockExplanation" g4i18n="conclusions.argueExplanation.withData" ng-hide="configurationModel.noDataOptions"></div>\n        <div class="blockExplanation" g4i18n="conclusions.argueExplanation.noData" ng-show="configurationModel.noDataOptions"></div>\n      </td>\n    </tr>\n    <tr ng-show="configurationModel.showHypothesisConfidenceMeter && confidences.defined">\n      <td>\n        <div class="confidenceControls">\n          <hypothesisConfidence readOnly="true" confidence="confidences.original"\n            title="{{\'conclusions.hypothesisConfidence.initial.tooltip\' | g4i18n}}"></hypothesisConfidence>\n          <i class="fa fa-arrow-right fa-fw fa-3x confidenceArrow"></i>\n          <hypothesisConfidence readOnly="selectedHypothesisConclusion" confidence="confidences.adapted"\n            title="{{\'conclusions.hypothesisConfidence.modified.tooltip\' | g4i18n}}"></hypothesisConfidence>\n        </div>\n      </td>\n    </tr>\n    <tr>\n      <td colspan=\'9\'>\n        <div class="argumentationBlock">\n          <div class="blockExplanation" g4i18n="conclusions.changeExplanation.confidence"\n            ng-show="conclusionModel.isStatementHypothesis() && configurationModel.showHypothesisConfidenceMeter && confidences.defined"></div>\n          <div class="blockExplanation" g4i18n="conclusions.changeExplanation.noConfidence"\n            ng-show="conclusionModel.isStatementHypothesis() && (!configurationModel.showHypothesisConfidenceMeter || !confidences.defined)"></div>\n          <div class="blockExplanation" g4i18n="conclusions.changeExplanation.question"\n            ng-show="conclusionModel.isStatementQuestion()"></div>\n          <textarea class="argueText" ng-model="argumentation" ng-blur=\'argumentationBlurred()\'\n            ng-disabled="!selectedStatementConclusion"></textarea>\n        </td>\n      </td>\n    </tr>\n  </table>\n</td>',link:function(t,o,i){var c,s,a,d;return c=n.getConclusionActionLogger(),d=function(){if(t.confidences={original:0,adapted:0,defined:!0},t.selectedStatementConclusion)return t.confidences.original=t.selectedStatementConclusion.getHypothesisConfidence(),t.confidences.adapted=t.selectedStatementConclusion.getNewConfidence(),t.confidences.defined=t.selectedStatementConclusion.getHypothesisConfidenceDefined()},d(),n.addListeners(["selectedStatementChanged","newConfidenceChanged","modelLoaded"],function(){return e(d)}),t.$watch("confidences.adapted",function(n){if(t.selectedStatementConclusion&&t.selectedStatementConclusion.getNewConfidence()!==n)return t.selectedStatementConclusion.setNewConfidence(n),c.logConfidenceChanged(t.selectedStatementConclusion,t.selectedStatementConclusion.getNewConfidence())}),a=function(){return t.argumentation=t.selectedStatementConclusion?t.selectedStatementConclusion.getArgumentation():""},n.addListeners(["argumentationChanged","selectedStatementChanged","modelLoaded","modelCleared"],function(){return e(a)}),a(),t.$watch("argumentation",function(n){if(t.selectedStatementConclusion)return t.selectedStatementConclusion.setArgumentation(n)}),s=t.argumentation,t.argumentationBlurred=function(){if(s!==t.argumentation)return c.logArgumentationChanged(t.selectedStatementConclusion,t.argumentation),s=t.argumentation}}}},ut.tools.conclusions.conclusionTool.directive("conclusions".toLowerCase(),["conclusionModel","$timeout",n])}).call(this);
//# sourceMappingURL=conclusions.js.map
